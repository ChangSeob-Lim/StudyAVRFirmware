
Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000011c  00800100  00000b6c  00000c00  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b6c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  0080021c  0080021c  00000d1c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d1c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000d78  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000060  00000000  00000000  00000db4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000d97  00000000  00000000  00000e14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000979  00000000  00000000  00001bab  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000067f  00000000  00000000  00002524  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000118  00000000  00000000  00002ba4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000494  00000000  00000000  00002cbc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000043a  00000000  00000000  00003150  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000358a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	61 c0       	rjmp	.+194    	; 0xc8 <__vector_1>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	12 e0       	ldi	r17, 0x02	; 2
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e6       	ldi	r30, 0x6C	; 108
  a0:	fb e0       	ldi	r31, 0x0B	; 11
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ac 31       	cpi	r26, 0x1C	; 28
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	22 e0       	ldi	r18, 0x02	; 2
  b4:	ac e1       	ldi	r26, 0x1C	; 28
  b6:	b2 e0       	ldi	r27, 0x02	; 2
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	af 31       	cpi	r26, 0x1F	; 31
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	d3 d1       	rcall	.+934    	; 0x46a <main>
  c4:	51 c5       	rjmp	.+2722   	; 0xb68 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <__vector_1>:

	return 0;
}

SIGNAL(INT0_vect)
{
  c8:	1f 92       	push	r1
  ca:	0f 92       	push	r0
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	0f 92       	push	r0
  d0:	11 24       	eor	r1, r1
  d2:	8f 93       	push	r24
  d4:	9f 93       	push	r25
	cli();
  d6:	f8 94       	cli

	STOP = 1;
  d8:	81 e0       	ldi	r24, 0x01	; 1
  da:	80 93 1c 02 	sts	0x021C, r24	; 0x80021c <__data_end>
	i = 9999;
  de:	8f e0       	ldi	r24, 0x0F	; 15
  e0:	97 e2       	ldi	r25, 0x27	; 39
  e2:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <i+0x1>
  e6:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <i>
	PORTA = 0x00;
  ea:	1b ba       	out	0x1b, r1	; 27
	TCCR1A |= 0x00;
  ec:	8f b5       	in	r24, 0x2f	; 47
  ee:	8f bd       	out	0x2f, r24	; 47

	sei();
  f0:	78 94       	sei
}
  f2:	9f 91       	pop	r25
  f4:	8f 91       	pop	r24
  f6:	0f 90       	pop	r0
  f8:	0f be       	out	0x3f, r0	; 63
  fa:	0f 90       	pop	r0
  fc:	1f 90       	pop	r1
  fe:	18 95       	reti

00000100 <putch>:
	}
}

void putch(unsigned char data)
{
	while((UCSR0A & 0x20)==0);
 100:	5d 9b       	sbis	0x0b, 5	; 11
 102:	fe cf       	rjmp	.-4      	; 0x100 <putch>
	UDR0 = data;
 104:	8c b9       	out	0x0c, r24	; 12
	UCSR0A |= 0x20;
 106:	5d 9a       	sbi	0x0b, 5	; 11
 108:	08 95       	ret

0000010a <putch_Str>:
}

void putch_Str(char *str)
{
 10a:	0f 93       	push	r16
 10c:	1f 93       	push	r17
 10e:	cf 93       	push	r28
 110:	8c 01       	movw	r16, r24
	unsigned char i=0;
 112:	c0 e0       	ldi	r28, 0x00	; 0
	while(str[i]!=0)
 114:	f8 01       	movw	r30, r16
 116:	ec 0f       	add	r30, r28
 118:	f1 1d       	adc	r31, r1
 11a:	80 81       	ld	r24, Z
 11c:	88 23       	and	r24, r24
 11e:	19 f0       	breq	.+6      	; 0x126 <putch_Str+0x1c>
		putch(str[i++]);
 120:	cf 5f       	subi	r28, 0xFF	; 255
 122:	ee df       	rcall	.-36     	; 0x100 <putch>
 124:	f7 cf       	rjmp	.-18     	; 0x114 <putch_Str+0xa>
}
 126:	cf 91       	pop	r28
 128:	1f 91       	pop	r17
 12a:	0f 91       	pop	r16
 12c:	08 95       	ret

0000012e <playLED>:
}

void playLED()
{
	unsigned char LED_Data = 0x00;
	putch_Str("Play LED\nExit: Press Button\n");
 12e:	88 e1       	ldi	r24, 0x18	; 24
 130:	91 e0       	ldi	r25, 0x01	; 1
 132:	eb df       	rcall	.-42     	; 0x10a <putch_Str>

	while(1)
	{
		if(STOP)
 134:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <__data_end>
 138:	88 23       	and	r24, r24
 13a:	19 f0       	breq	.+6      	; 0x142 <playLED+0x14>
		{
			STOP=0;
 13c:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <__data_end>
 140:	08 95       	ret
			return;
		}

		LED_Data = 0x01;
		for(i=0; i<7; i++)
 142:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <i+0x1>
 146:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <i>
		{
			STOP=0;
			return;
		}

		LED_Data = 0x01;
 14a:	81 e0       	ldi	r24, 0x01	; 1
		for(i=0; i<7; i++)
 14c:	20 91 1d 02 	lds	r18, 0x021D	; 0x80021d <i>
 150:	30 91 1e 02 	lds	r19, 0x021E	; 0x80021e <i+0x1>
 154:	27 30       	cpi	r18, 0x07	; 7
 156:	31 05       	cpc	r19, r1
 158:	b0 f4       	brcc	.+44     	; 0x186 <playLED+0x58>
		{
			PORTA = LED_Data;
 15a:	8b bb       	out	0x1b, r24	; 27
			LED_Data <<= 1;
 15c:	88 0f       	add	r24, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 15e:	2f ef       	ldi	r18, 0xFF	; 255
 160:	3f e3       	ldi	r19, 0x3F	; 63
 162:	9b e0       	ldi	r25, 0x0B	; 11
 164:	21 50       	subi	r18, 0x01	; 1
 166:	30 40       	sbci	r19, 0x00	; 0
 168:	90 40       	sbci	r25, 0x00	; 0
 16a:	e1 f7       	brne	.-8      	; 0x164 <playLED+0x36>
 16c:	00 c0       	rjmp	.+0      	; 0x16e <playLED+0x40>
 16e:	00 00       	nop
			STOP=0;
			return;
		}

		LED_Data = 0x01;
		for(i=0; i<7; i++)
 170:	20 91 1d 02 	lds	r18, 0x021D	; 0x80021d <i>
 174:	30 91 1e 02 	lds	r19, 0x021E	; 0x80021e <i+0x1>
 178:	2f 5f       	subi	r18, 0xFF	; 255
 17a:	3f 4f       	sbci	r19, 0xFF	; 255
 17c:	30 93 1e 02 	sts	0x021E, r19	; 0x80021e <i+0x1>
 180:	20 93 1d 02 	sts	0x021D, r18	; 0x80021d <i>
 184:	e3 cf       	rjmp	.-58     	; 0x14c <playLED+0x1e>
			PORTA = LED_Data;
			LED_Data <<= 1;
			_delay_ms(500);
		}

		if(STOP)
 186:	90 91 1c 02 	lds	r25, 0x021C	; 0x80021c <__data_end>
 18a:	91 11       	cpse	r25, r1
 18c:	d7 cf       	rjmp	.-82     	; 0x13c <playLED+0xe>
		{
			STOP=0;
			return;
		}

		for(i=0; i<8; i++)
 18e:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <i+0x1>
 192:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <i>
 196:	20 91 1d 02 	lds	r18, 0x021D	; 0x80021d <i>
 19a:	30 91 1e 02 	lds	r19, 0x021E	; 0x80021e <i+0x1>
 19e:	28 30       	cpi	r18, 0x08	; 8
 1a0:	31 05       	cpc	r19, r1
 1a2:	40 f6       	brcc	.-112    	; 0x134 <playLED+0x6>
		{
			PORTA = LED_Data;
 1a4:	8b bb       	out	0x1b, r24	; 27
			LED_Data >>= 1;
 1a6:	86 95       	lsr	r24
 1a8:	2f ef       	ldi	r18, 0xFF	; 255
 1aa:	3f e3       	ldi	r19, 0x3F	; 63
 1ac:	9b e0       	ldi	r25, 0x0B	; 11
 1ae:	21 50       	subi	r18, 0x01	; 1
 1b0:	30 40       	sbci	r19, 0x00	; 0
 1b2:	90 40       	sbci	r25, 0x00	; 0
 1b4:	e1 f7       	brne	.-8      	; 0x1ae <playLED+0x80>
 1b6:	00 c0       	rjmp	.+0      	; 0x1b8 <playLED+0x8a>
 1b8:	00 00       	nop
		{
			STOP=0;
			return;
		}

		for(i=0; i<8; i++)
 1ba:	20 91 1d 02 	lds	r18, 0x021D	; 0x80021d <i>
 1be:	30 91 1e 02 	lds	r19, 0x021E	; 0x80021e <i+0x1>
 1c2:	2f 5f       	subi	r18, 0xFF	; 255
 1c4:	3f 4f       	sbci	r19, 0xFF	; 255
 1c6:	30 93 1e 02 	sts	0x021E, r19	; 0x80021e <i+0x1>
 1ca:	20 93 1d 02 	sts	0x021D, r18	; 0x80021d <i>
 1ce:	e3 cf       	rjmp	.-58     	; 0x196 <playLED+0x68>

000001d0 <playCDS>:
		LED_Data = 0x00;
	}
}

void playCDS()
{
 1d0:	cf 92       	push	r12
 1d2:	df 92       	push	r13
 1d4:	ef 92       	push	r14
 1d6:	ff 92       	push	r15
 1d8:	0f 93       	push	r16
 1da:	1f 93       	push	r17
 1dc:	cf 93       	push	r28
 1de:	df 93       	push	r29
 1e0:	00 d0       	rcall	.+0      	; 0x1e2 <playCDS+0x12>
 1e2:	00 d0       	rcall	.+0      	; 0x1e4 <playCDS+0x14>
 1e4:	1f 92       	push	r1
 1e6:	cd b7       	in	r28, 0x3d	; 61
 1e8:	de b7       	in	r29, 0x3e	; 62
	unsigned int AdData = 0;
	char CDS_data[] = "0000";
 1ea:	85 e0       	ldi	r24, 0x05	; 5
 1ec:	e5 e6       	ldi	r30, 0x65	; 101
 1ee:	f1 e0       	ldi	r31, 0x01	; 1
 1f0:	8e 01       	movw	r16, r28
 1f2:	0f 5f       	subi	r16, 0xFF	; 255
 1f4:	1f 4f       	sbci	r17, 0xFF	; 255
 1f6:	d8 01       	movw	r26, r16
 1f8:	01 90       	ld	r0, Z+
 1fa:	0d 92       	st	X+, r0
 1fc:	8a 95       	dec	r24
 1fe:	e1 f7       	brne	.-8      	; 0x1f8 <playCDS+0x28>
	putch_Str("Play CDS\nExit: Press Button\n");
 200:	85 e3       	ldi	r24, 0x35	; 53
 202:	91 e0       	ldi	r25, 0x01	; 1
 204:	82 df       	rcall	.-252    	; 0x10a <putch_Str>

		ADCSRA |= 0x40;
		while((ADCSRA & 0x01)==0x00);
		AdData = ADC;
		putch_Str("CDS ADC_Data: ");
		sprintf(CDS_data, "%d\n", AdData);
 206:	81 e6       	ldi	r24, 0x61	; 97
 208:	e8 2e       	mov	r14, r24
 20a:	81 e0       	ldi	r24, 0x01	; 1
 20c:	f8 2e       	mov	r15, r24
	char CDS_data[] = "0000";
	putch_Str("Play CDS\nExit: Press Button\n");

	while(1)
	{
		if(STOP)
 20e:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <__data_end>
 212:	88 23       	and	r24, r24
 214:	81 f0       	breq	.+32     	; 0x236 <playCDS+0x66>
		{
			STOP=0;
 216:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <__data_end>
		putch_Str("CDS ADC_Data: ");
		sprintf(CDS_data, "%d\n", AdData);
		putch_Str(CDS_data);
		_delay_ms(500);	
	}
}
 21a:	0f 90       	pop	r0
 21c:	0f 90       	pop	r0
 21e:	0f 90       	pop	r0
 220:	0f 90       	pop	r0
 222:	0f 90       	pop	r0
 224:	df 91       	pop	r29
 226:	cf 91       	pop	r28
 228:	1f 91       	pop	r17
 22a:	0f 91       	pop	r16
 22c:	ff 90       	pop	r15
 22e:	ef 90       	pop	r14
 230:	df 90       	pop	r13
 232:	cf 90       	pop	r12
 234:	08 95       	ret
		{
			STOP=0;
			return;
		}

		ADCSRA |= 0x40;
 236:	36 9a       	sbi	0x06, 6	; 6
		while((ADCSRA & 0x01)==0x00);
 238:	30 9b       	sbis	0x06, 0	; 6
 23a:	fe cf       	rjmp	.-4      	; 0x238 <playCDS+0x68>
		AdData = ADC;
 23c:	c4 b0       	in	r12, 0x04	; 4
 23e:	d5 b0       	in	r13, 0x05	; 5
		putch_Str("CDS ADC_Data: ");
 240:	82 e5       	ldi	r24, 0x52	; 82
 242:	91 e0       	ldi	r25, 0x01	; 1
 244:	62 df       	rcall	.-316    	; 0x10a <putch_Str>
		sprintf(CDS_data, "%d\n", AdData);
 246:	df 92       	push	r13
 248:	cf 92       	push	r12
 24a:	ff 92       	push	r15
 24c:	ef 92       	push	r14
 24e:	1f 93       	push	r17
 250:	0f 93       	push	r16
		putch_Str(CDS_data);
 252:	af d1       	rcall	.+862    	; 0x5b2 <sprintf>
 254:	c8 01       	movw	r24, r16
 256:	59 df       	rcall	.-334    	; 0x10a <putch_Str>
 258:	2f ef       	ldi	r18, 0xFF	; 255
 25a:	8f e3       	ldi	r24, 0x3F	; 63
 25c:	9b e0       	ldi	r25, 0x0B	; 11
 25e:	21 50       	subi	r18, 0x01	; 1
 260:	80 40       	sbci	r24, 0x00	; 0
 262:	90 40       	sbci	r25, 0x00	; 0
 264:	e1 f7       	brne	.-8      	; 0x25e <playCDS+0x8e>
 266:	00 c0       	rjmp	.+0      	; 0x268 <playCDS+0x98>
 268:	00 00       	nop
 26a:	0f 90       	pop	r0
 26c:	0f 90       	pop	r0
 26e:	0f 90       	pop	r0
 270:	0f 90       	pop	r0
 272:	0f 90       	pop	r0
 274:	0f 90       	pop	r0
 276:	cb cf       	rjmp	.-106    	; 0x20e <playCDS+0x3e>

00000278 <getch>:
}

unsigned char getch()
{
	unsigned char data;
	while((UCSR0A & 0x80)==0);
 278:	5f 9b       	sbis	0x0b, 7	; 11
 27a:	fe cf       	rjmp	.-4      	; 0x278 <getch>
	data = UDR0;
 27c:	8c b1       	in	r24, 0x0c	; 12
	UCSR0A |= 0x80;
 27e:	5f 9a       	sbi	0x0b, 7	; 11
	return data;
 280:	08 95       	ret

00000282 <playPiano>:
		_delay_ms(500);	
	}
}

void playPiano()
{
 282:	cf 92       	push	r12
 284:	df 92       	push	r13
 286:	ef 92       	push	r14
 288:	ff 92       	push	r15
 28a:	cf 93       	push	r28
 28c:	df 93       	push	r29
	putch_Str("Play Piano (Press 0 ~ 7, Exit: X)\n");
 28e:	8a e6       	ldi	r24, 0x6A	; 106
 290:	91 e0       	ldi	r25, 0x01	; 1
 292:	3b df       	rcall	.-394    	; 0x10a <putch_Str>
			TCCR1A |= 0x00;
		}
		else if(piano >= '0' && piano <= '7') // 하나씩 출력 0~7
		{
			TCCR1A |= 0x0A;
			ICR1 = 7372800/DoReMi[piano-'0'];
 294:	c1 2c       	mov	r12, r1
 296:	30 e8       	ldi	r19, 0x80	; 128
 298:	d3 2e       	mov	r13, r19
 29a:	30 e7       	ldi	r19, 0x70	; 112
 29c:	e3 2e       	mov	r14, r19
 29e:	f1 2c       	mov	r15, r1
			OCR1C = ICR1/10;
 2a0:	ca e0       	ldi	r28, 0x0A	; 10
 2a2:	d0 e0       	ldi	r29, 0x00	; 0
	
	unsigned char piano;

	while(1)
	{
		if(STOP)
 2a4:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <__data_end>
 2a8:	88 23       	and	r24, r24
 2aa:	19 f0       	breq	.+6      	; 0x2b2 <playPiano+0x30>
		{
			STOP=0;
 2ac:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <__data_end>
			TCCR1A |= 0x00;
			return;
		}

		piano = getch();
 2b0:	72 c0       	rjmp	.+228    	; 0x396 <playPiano+0x114>
 2b2:	e2 df       	rcall	.-60     	; 0x278 <getch>

		if(piano == '8') // 도~도까지
 2b4:	88 33       	cpi	r24, 0x38	; 56
 2b6:	e1 f5       	brne	.+120    	; 0x330 <playPiano+0xae>
		{
			TCCR1A |= 0x0A;
 2b8:	8f b5       	in	r24, 0x2f	; 47
 2ba:	8a 60       	ori	r24, 0x0A	; 10
 2bc:	8f bd       	out	0x2f, r24	; 47
			for(i=0; i<8; i++)
 2be:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <i+0x1>
 2c2:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <i>
 2c6:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <i>
 2ca:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <i+0x1>
 2ce:	88 30       	cpi	r24, 0x08	; 8
 2d0:	91 05       	cpc	r25, r1
 2d2:	08 f0       	brcs	.+2      	; 0x2d6 <playPiano+0x54>
 2d4:	58 c0       	rjmp	.+176    	; 0x386 <playPiano+0x104>
			{
				ICR1 = 7372800/DoReMi[i];
 2d6:	88 0f       	add	r24, r24
 2d8:	99 1f       	adc	r25, r25
 2da:	fc 01       	movw	r30, r24
 2dc:	e8 5f       	subi	r30, 0xF8	; 248
 2de:	fe 4f       	sbci	r31, 0xFE	; 254
 2e0:	20 81       	ld	r18, Z
 2e2:	31 81       	ldd	r19, Z+1	; 0x01
 2e4:	40 e0       	ldi	r20, 0x00	; 0
 2e6:	50 e0       	ldi	r21, 0x00	; 0
 2e8:	c7 01       	movw	r24, r14
 2ea:	b6 01       	movw	r22, r12
 2ec:	24 d1       	rcall	.+584    	; 0x536 <__divmodsi4>
 2ee:	37 bd       	out	0x27, r19	; 39
 2f0:	26 bd       	out	0x26, r18	; 38
				OCR1C = ICR1/10;
 2f2:	86 b5       	in	r24, 0x26	; 38
 2f4:	97 b5       	in	r25, 0x27	; 39
 2f6:	be 01       	movw	r22, r28
 2f8:	0a d1       	rcall	.+532    	; 0x50e <__udivmodhi4>
 2fa:	70 93 79 00 	sts	0x0079, r23	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 2fe:	60 93 78 00 	sts	0x0078, r22	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 302:	2f ef       	ldi	r18, 0xFF	; 255
 304:	8f e9       	ldi	r24, 0x9F	; 159
 306:	95 e0       	ldi	r25, 0x05	; 5
 308:	21 50       	subi	r18, 0x01	; 1
 30a:	80 40       	sbci	r24, 0x00	; 0
 30c:	90 40       	sbci	r25, 0x00	; 0
 30e:	e1 f7       	brne	.-8      	; 0x308 <playPiano+0x86>
 310:	00 c0       	rjmp	.+0      	; 0x312 <playPiano+0x90>
 312:	00 00       	nop
				_delay_ms(250);
				OCR1C = 0x00;
 314:	10 92 79 00 	sts	0x0079, r1	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 318:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
		piano = getch();

		if(piano == '8') // 도~도까지
		{
			TCCR1A |= 0x0A;
			for(i=0; i<8; i++)
 31c:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <i>
 320:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <i+0x1>
 324:	01 96       	adiw	r24, 0x01	; 1
 326:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <i+0x1>
 32a:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <i>
 32e:	cb cf       	rjmp	.-106    	; 0x2c6 <playPiano+0x44>
				_delay_ms(250);
				OCR1C = 0x00;
			}
			TCCR1A |= 0x00;
		}
		else if(piano >= '0' && piano <= '7') // 하나씩 출력 0~7
 330:	90 ed       	ldi	r25, 0xD0	; 208
 332:	98 0f       	add	r25, r24
 334:	98 30       	cpi	r25, 0x08	; 8
 336:	50 f5       	brcc	.+84     	; 0x38c <playPiano+0x10a>
		{
			TCCR1A |= 0x0A;
 338:	9f b5       	in	r25, 0x2f	; 47
 33a:	9a 60       	ori	r25, 0x0A	; 10
 33c:	9f bd       	out	0x2f, r25	; 47
			ICR1 = 7372800/DoReMi[piano-'0'];
 33e:	e8 2f       	mov	r30, r24
 340:	f0 e0       	ldi	r31, 0x00	; 0
 342:	ee 0f       	add	r30, r30
 344:	ff 1f       	adc	r31, r31
 346:	e8 55       	subi	r30, 0x58	; 88
 348:	ff 4f       	sbci	r31, 0xFF	; 255
 34a:	20 81       	ld	r18, Z
 34c:	31 81       	ldd	r19, Z+1	; 0x01
 34e:	40 e0       	ldi	r20, 0x00	; 0
 350:	50 e0       	ldi	r21, 0x00	; 0
 352:	c7 01       	movw	r24, r14
 354:	b6 01       	movw	r22, r12
 356:	ef d0       	rcall	.+478    	; 0x536 <__divmodsi4>
 358:	37 bd       	out	0x27, r19	; 39
			OCR1C = ICR1/10;
 35a:	26 bd       	out	0x26, r18	; 38
 35c:	86 b5       	in	r24, 0x26	; 38
 35e:	97 b5       	in	r25, 0x27	; 39
 360:	be 01       	movw	r22, r28
 362:	d5 d0       	rcall	.+426    	; 0x50e <__udivmodhi4>
 364:	70 93 79 00 	sts	0x0079, r23	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 368:	60 93 78 00 	sts	0x0078, r22	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 36c:	2f ef       	ldi	r18, 0xFF	; 255
 36e:	8f e9       	ldi	r24, 0x9F	; 159
 370:	95 e0       	ldi	r25, 0x05	; 5
 372:	21 50       	subi	r18, 0x01	; 1
 374:	80 40       	sbci	r24, 0x00	; 0
 376:	90 40       	sbci	r25, 0x00	; 0
 378:	e1 f7       	brne	.-8      	; 0x372 <playPiano+0xf0>
 37a:	00 c0       	rjmp	.+0      	; 0x37c <playPiano+0xfa>
 37c:	00 00       	nop
			_delay_ms(250);
			OCR1C = 0x00;
 37e:	10 92 79 00 	sts	0x0079, r1	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 382:	10 92 78 00 	sts	0x0078, r1	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
			TCCR1A |= 0x00;
 386:	8f b5       	in	r24, 0x2f	; 47
 388:	8f bd       	out	0x2f, r24	; 47
 38a:	8c cf       	rjmp	.-232    	; 0x2a4 <playPiano+0x22>
		}
		else if(piano == 'X' || piano == 'x')
 38c:	e8 2f       	mov	r30, r24
 38e:	ef 7d       	andi	r30, 0xDF	; 223
 390:	e8 35       	cpi	r30, 0x58	; 88
 392:	09 f0       	breq	.+2      	; 0x396 <playPiano+0x114>
 394:	87 cf       	rjmp	.-242    	; 0x2a4 <playPiano+0x22>
		{
			TCCR1A |= 0x00;
 396:	8f b5       	in	r24, 0x2f	; 47
 398:	8f bd       	out	0x2f, r24	; 47
			break;
		}
	}
}
 39a:	df 91       	pop	r29
 39c:	cf 91       	pop	r28
 39e:	ff 90       	pop	r15
 3a0:	ef 90       	pop	r14
 3a2:	df 90       	pop	r13
 3a4:	cf 90       	pop	r12
 3a6:	08 95       	ret

000003a8 <playStepMoter>:

void playStepMoter()
{
	putch_Str("Play StepMoter (Press Clockwise: F, Counterclockwise: R, Exit: X)\n");
 3a8:	8d e8       	ldi	r24, 0x8D	; 141
 3aa:	91 e0       	ldi	r25, 0x01	; 1
 3ac:	ae de       	rcall	.-676    	; 0x10a <putch_Str>
	unsigned char location;
	
	while(1)
	{
		if(STOP)
 3ae:	80 91 1c 02 	lds	r24, 0x021C	; 0x80021c <__data_end>
 3b2:	88 23       	and	r24, r24
 3b4:	19 f0       	breq	.+6      	; 0x3bc <playStepMoter+0x14>
		{
			STOP=0;
 3b6:	10 92 1c 02 	sts	0x021C, r1	; 0x80021c <__data_end>
			return;
		}

		location = getch();
 3ba:	08 95       	ret
 3bc:	5d df       	rcall	.-326    	; 0x278 <getch>

		// 스텝모터 시계 방향 동작 (키보드 f)
		if(location == 'F' || location == 'f')
 3be:	8f 7d       	andi	r24, 0xDF	; 223
 3c0:	86 34       	cpi	r24, 0x46	; 70
 3c2:	31 f5       	brne	.+76     	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
		{
			for(i=0; i<120; i++)
 3c4:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <i+0x1>
 3c8:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <i>
 3cc:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <i>
 3d0:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <i+0x1>
 3d4:	88 37       	cpi	r24, 0x78	; 120
 3d6:	91 05       	cpc	r25, r1
 3d8:	50 f7       	brcc	.-44     	; 0x3ae <playStepMoter+0x6>
			{if(STOP) return;
 3da:	20 91 1c 02 	lds	r18, 0x021C	; 0x80021c <__data_end>
 3de:	21 11       	cpse	r18, r1
 3e0:	43 c0       	rjmp	.+134    	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
				PORTD = CW[i%4];
 3e2:	83 70       	andi	r24, 0x03	; 3
 3e4:	99 27       	eor	r25, r25
 3e6:	fc 01       	movw	r30, r24
 3e8:	ec 5f       	subi	r30, 0xFC	; 252
 3ea:	fe 4f       	sbci	r31, 0xFE	; 254
 3ec:	80 81       	ld	r24, Z
 3ee:	82 bb       	out	0x12, r24	; 18
 3f0:	8f ef       	ldi	r24, 0xFF	; 255
 3f2:	97 e4       	ldi	r25, 0x47	; 71
 3f4:	01 97       	sbiw	r24, 0x01	; 1
 3f6:	f1 f7       	brne	.-4      	; 0x3f4 <playStepMoter+0x4c>
 3f8:	00 c0       	rjmp	.+0      	; 0x3fa <playStepMoter+0x52>
 3fa:	00 00       	nop
		location = getch();

		// 스텝모터 시계 방향 동작 (키보드 f)
		if(location == 'F' || location == 'f')
		{
			for(i=0; i<120; i++)
 3fc:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <i>
 400:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <i+0x1>
 404:	01 96       	adiw	r24, 0x01	; 1
 406:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <i+0x1>
 40a:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <i>
 40e:	de cf       	rjmp	.-68     	; 0x3cc <playStepMoter+0x24>
				_delay_ms(10);
			}
		}

		// 스텝모터 반시계 방향 동작 (키보드 r)
		else if(location == 'R' || location == 'r')
 410:	82 35       	cpi	r24, 0x52	; 82
 412:	39 f5       	brne	.+78     	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
		{
			for(i=0; i<120; i++)
 414:	10 92 1e 02 	sts	0x021E, r1	; 0x80021e <i+0x1>
 418:	10 92 1d 02 	sts	0x021D, r1	; 0x80021d <i>
 41c:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <i>
 420:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <i+0x1>
 424:	88 37       	cpi	r24, 0x78	; 120
 426:	91 05       	cpc	r25, r1
 428:	08 f0       	brcs	.+2      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 42a:	c1 cf       	rjmp	.-126    	; 0x3ae <playStepMoter+0x6>
			{if(STOP) return;
 42c:	20 91 1c 02 	lds	r18, 0x021C	; 0x80021c <__data_end>
 430:	21 11       	cpse	r18, r1
 432:	1a c0       	rjmp	.+52     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
				PORTD = CCW[i%4];
 434:	83 70       	andi	r24, 0x03	; 3
 436:	99 27       	eor	r25, r25
 438:	fc 01       	movw	r30, r24
 43a:	e0 50       	subi	r30, 0x00	; 0
 43c:	ff 4f       	sbci	r31, 0xFF	; 255
 43e:	80 81       	ld	r24, Z
 440:	82 bb       	out	0x12, r24	; 18
 442:	8f ef       	ldi	r24, 0xFF	; 255
 444:	97 e4       	ldi	r25, 0x47	; 71
 446:	01 97       	sbiw	r24, 0x01	; 1
 448:	f1 f7       	brne	.-4      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 44a:	00 c0       	rjmp	.+0      	; 0x44c <__LOCK_REGION_LENGTH__+0x4c>
 44c:	00 00       	nop
		}

		// 스텝모터 반시계 방향 동작 (키보드 r)
		else if(location == 'R' || location == 'r')
		{
			for(i=0; i<120; i++)
 44e:	80 91 1d 02 	lds	r24, 0x021D	; 0x80021d <i>
 452:	90 91 1e 02 	lds	r25, 0x021E	; 0x80021e <i+0x1>
 456:	01 96       	adiw	r24, 0x01	; 1
 458:	90 93 1e 02 	sts	0x021E, r25	; 0x80021e <i+0x1>
 45c:	80 93 1d 02 	sts	0x021D, r24	; 0x80021d <i>
 460:	dd cf       	rjmp	.-70     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
				PORTD = CCW[i%4];
				_delay_ms(10);
			}
		}

		else if(location == 'X' || location == 'x')
 462:	88 35       	cpi	r24, 0x58	; 88
 464:	09 f0       	breq	.+2      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 466:	a3 cf       	rjmp	.-186    	; 0x3ae <playStepMoter+0x6>
 468:	08 95       	ret

0000046a <main>:
int main(void)
{
	unsigned char Menu;

	// 포트 설정
	DDRA = 0xFF; // LED 설정, PA -> LED 연결
 46a:	8f ef       	ldi	r24, 0xFF	; 255
 46c:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0x80; // PB7 -> 부저 연결
 46e:	80 e8       	ldi	r24, 0x80	; 128
 470:	87 bb       	out	0x17, r24	; 23
	DDRC = 0x20; // 스텝모터 설정
 472:	80 e2       	ldi	r24, 0x20	; 32
 474:	84 bb       	out	0x14, r24	; 20
	DDRD = 0xF0; // PD4~7 -> 스텝모터 0~3 연결, 인터럽터 버튼 0번 설정
 476:	80 ef       	ldi	r24, 0xF0	; 240
 478:	81 bb       	out	0x11, r24	; 17
	DDRE = 0xFE; // UART 설정
 47a:	8e ef       	ldi	r24, 0xFE	; 254
 47c:	82 b9       	out	0x02, r24	; 2
	DDRF = 0x02; // CDS 설정 PF0-> cds_out 입력, PF1->cds_in 출력	
 47e:	82 e0       	ldi	r24, 0x02	; 2
 480:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	
	// LED 설정
	PORTA = 0x00;
 484:	1b ba       	out	0x1b, r1	; 27

	// CDS 설정
	PORTF = 0x02; // cds_in VCC
 486:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__TEXT_REGION_LENGTH__+0x7e0062>

	ADMUX = 0x00;
 48a:	17 b8       	out	0x07, r1	; 7
	ADCSRA = 0x87;
 48c:	87 e8       	ldi	r24, 0x87	; 135
 48e:	86 b9       	out	0x06, r24	; 6
	
	// 피아노 설정
	TCCR1A |= 0x00;
 490:	8f b5       	in	r24, 0x2f	; 47
 492:	8f bd       	out	0x2f, r24	; 47
	TCCR1B |= 0x19;
 494:	8e b5       	in	r24, 0x2e	; 46
 496:	89 61       	ori	r24, 0x19	; 25
 498:	8e bd       	out	0x2e, r24	; 46
	TCCR1C = 0x00;
 49a:	10 92 7a 00 	sts	0x007A, r1	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	TCNT1 = 0x0000;
 49e:	1d bc       	out	0x2d, r1	; 45
 4a0:	1c bc       	out	0x2c, r1	; 44

	// 스텝모터 설정
	PORTC &= 0x20;
 4a2:	85 b3       	in	r24, 0x15	; 21
 4a4:	80 72       	andi	r24, 0x20	; 32
 4a6:	85 bb       	out	0x15, r24	; 21

	// UART 설정
	UCSR0A = 0x00;
 4a8:	1b b8       	out	0x0b, r1	; 11
	UCSR0B = 0x18;
 4aa:	88 e1       	ldi	r24, 0x18	; 24
 4ac:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = 0x06;
 4ae:	86 e0       	ldi	r24, 0x06	; 6
 4b0:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>

	UBRR0H = 0x00;
 4b4:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 0x03; // 115200
 4b8:	83 e0       	ldi	r24, 0x03	; 3
 4ba:	89 b9       	out	0x09, r24	; 9

	// 인터럽트 설정
	EICRA = 0x03;
 4bc:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <__TEXT_REGION_LENGTH__+0x7e006a>
	EIMSK = 0x01;
 4c0:	81 e0       	ldi	r24, 0x01	; 1
 4c2:	89 bf       	out	0x39, r24	; 57
	EIFR = 0x01;
 4c4:	88 bf       	out	0x38, r24	; 56

	sei();
 4c6:	78 94       	sei

    while (1) 
    {
		putch_Str("\n++++ Menu ++++\n");
 4c8:	80 ed       	ldi	r24, 0xD0	; 208
 4ca:	91 e0       	ldi	r25, 0x01	; 1
 4cc:	1e de       	rcall	.-964    	; 0x10a <putch_Str>
		putch_Str("L : LED\n");
 4ce:	81 ee       	ldi	r24, 0xE1	; 225
 4d0:	91 e0       	ldi	r25, 0x01	; 1
 4d2:	1b de       	rcall	.-970    	; 0x10a <putch_Str>
		putch_Str("C : CDS\n");
 4d4:	8a ee       	ldi	r24, 0xEA	; 234
 4d6:	91 e0       	ldi	r25, 0x01	; 1
 4d8:	18 de       	rcall	.-976    	; 0x10a <putch_Str>
		putch_Str("P : Piano\n");
 4da:	83 ef       	ldi	r24, 0xF3	; 243
 4dc:	91 e0       	ldi	r25, 0x01	; 1
 4de:	15 de       	rcall	.-982    	; 0x10a <putch_Str>
		putch_Str("S : Step Motor(f:CW, r:CCW)\n");
 4e0:	8e ef       	ldi	r24, 0xFE	; 254
 4e2:	91 e0       	ldi	r25, 0x01	; 1
 4e4:	12 de       	rcall	.-988    	; 0x10a <putch_Str>
 4e6:	c8 de       	rcall	.-624    	; 0x278 <getch>

		Menu = getch();
 4e8:	98 2f       	mov	r25, r24

		if(Menu == 'L' || Menu == 'l') // LED (키보드 L)
 4ea:	9f 7d       	andi	r25, 0xDF	; 223
 4ec:	9c 34       	cpi	r25, 0x4C	; 76
 4ee:	11 f4       	brne	.+4      	; 0x4f4 <main+0x8a>
		{
			playLED(); // LED 동작 
 4f0:	1e de       	rcall	.-964    	; 0x12e <playLED>
 4f2:	ea cf       	rjmp	.-44     	; 0x4c8 <main+0x5e>
		}
		else if(Menu == 'C' || Menu == 'c') // CDS (키보드 C)
 4f4:	93 34       	cpi	r25, 0x43	; 67
 4f6:	11 f4       	brne	.+4      	; 0x4fc <main+0x92>
		{
			playCDS(); // CDS 동작 
 4f8:	6b de       	rcall	.-810    	; 0x1d0 <playCDS>
 4fa:	e6 cf       	rjmp	.-52     	; 0x4c8 <main+0x5e>
		}
		else if(Menu == 'P' || Menu == 'p') // 피아노 (키보드 P)
 4fc:	90 35       	cpi	r25, 0x50	; 80
 4fe:	11 f4       	brne	.+4      	; 0x504 <main+0x9a>
		{
			playPiano(); // 피아노 동작 (키보드 0~7번)
 500:	c0 de       	rcall	.-640    	; 0x282 <playPiano>
 502:	e2 cf       	rjmp	.-60     	; 0x4c8 <main+0x5e>
 504:	93 35       	cpi	r25, 0x53	; 83
		}
		else if(Menu == 'S' || Menu == 's')
 506:	01 f7       	brne	.-64     	; 0x4c8 <main+0x5e>
 508:	90 e0       	ldi	r25, 0x00	; 0
		{
			playStepMoter(Menu); // 스텝모터 동작 (키보드 S)
 50a:	4e df       	rcall	.-356    	; 0x3a8 <playStepMoter>
 50c:	dd cf       	rjmp	.-70     	; 0x4c8 <main+0x5e>

0000050e <__udivmodhi4>:
 50e:	aa 1b       	sub	r26, r26
 510:	bb 1b       	sub	r27, r27
 512:	51 e1       	ldi	r21, 0x11	; 17
 514:	07 c0       	rjmp	.+14     	; 0x524 <__udivmodhi4_ep>

00000516 <__udivmodhi4_loop>:
 516:	aa 1f       	adc	r26, r26
 518:	bb 1f       	adc	r27, r27
 51a:	a6 17       	cp	r26, r22
 51c:	b7 07       	cpc	r27, r23
 51e:	10 f0       	brcs	.+4      	; 0x524 <__udivmodhi4_ep>
 520:	a6 1b       	sub	r26, r22
 522:	b7 0b       	sbc	r27, r23

00000524 <__udivmodhi4_ep>:
 524:	88 1f       	adc	r24, r24
 526:	99 1f       	adc	r25, r25
 528:	5a 95       	dec	r21
 52a:	a9 f7       	brne	.-22     	; 0x516 <__udivmodhi4_loop>
 52c:	80 95       	com	r24
 52e:	90 95       	com	r25
 530:	bc 01       	movw	r22, r24
 532:	cd 01       	movw	r24, r26
 534:	08 95       	ret

00000536 <__divmodsi4>:
 536:	05 2e       	mov	r0, r21
 538:	97 fb       	bst	r25, 7
 53a:	16 f4       	brtc	.+4      	; 0x540 <__divmodsi4+0xa>
 53c:	00 94       	com	r0
 53e:	0f d0       	rcall	.+30     	; 0x55e <__negsi2>
 540:	57 fd       	sbrc	r21, 7
 542:	05 d0       	rcall	.+10     	; 0x54e <__divmodsi4_neg2>
 544:	14 d0       	rcall	.+40     	; 0x56e <__udivmodsi4>
 546:	07 fc       	sbrc	r0, 7
 548:	02 d0       	rcall	.+4      	; 0x54e <__divmodsi4_neg2>
 54a:	46 f4       	brtc	.+16     	; 0x55c <__divmodsi4_exit>
 54c:	08 c0       	rjmp	.+16     	; 0x55e <__negsi2>

0000054e <__divmodsi4_neg2>:
 54e:	50 95       	com	r21
 550:	40 95       	com	r20
 552:	30 95       	com	r19
 554:	21 95       	neg	r18
 556:	3f 4f       	sbci	r19, 0xFF	; 255
 558:	4f 4f       	sbci	r20, 0xFF	; 255
 55a:	5f 4f       	sbci	r21, 0xFF	; 255

0000055c <__divmodsi4_exit>:
 55c:	08 95       	ret

0000055e <__negsi2>:
 55e:	90 95       	com	r25
 560:	80 95       	com	r24
 562:	70 95       	com	r23
 564:	61 95       	neg	r22
 566:	7f 4f       	sbci	r23, 0xFF	; 255
 568:	8f 4f       	sbci	r24, 0xFF	; 255
 56a:	9f 4f       	sbci	r25, 0xFF	; 255
 56c:	08 95       	ret

0000056e <__udivmodsi4>:
 56e:	a1 e2       	ldi	r26, 0x21	; 33
 570:	1a 2e       	mov	r1, r26
 572:	aa 1b       	sub	r26, r26
 574:	bb 1b       	sub	r27, r27
 576:	fd 01       	movw	r30, r26
 578:	0d c0       	rjmp	.+26     	; 0x594 <__udivmodsi4_ep>

0000057a <__udivmodsi4_loop>:
 57a:	aa 1f       	adc	r26, r26
 57c:	bb 1f       	adc	r27, r27
 57e:	ee 1f       	adc	r30, r30
 580:	ff 1f       	adc	r31, r31
 582:	a2 17       	cp	r26, r18
 584:	b3 07       	cpc	r27, r19
 586:	e4 07       	cpc	r30, r20
 588:	f5 07       	cpc	r31, r21
 58a:	20 f0       	brcs	.+8      	; 0x594 <__udivmodsi4_ep>
 58c:	a2 1b       	sub	r26, r18
 58e:	b3 0b       	sbc	r27, r19
 590:	e4 0b       	sbc	r30, r20
 592:	f5 0b       	sbc	r31, r21

00000594 <__udivmodsi4_ep>:
 594:	66 1f       	adc	r22, r22
 596:	77 1f       	adc	r23, r23
 598:	88 1f       	adc	r24, r24
 59a:	99 1f       	adc	r25, r25
 59c:	1a 94       	dec	r1
 59e:	69 f7       	brne	.-38     	; 0x57a <__udivmodsi4_loop>
 5a0:	60 95       	com	r22
 5a2:	70 95       	com	r23
 5a4:	80 95       	com	r24
 5a6:	90 95       	com	r25
 5a8:	9b 01       	movw	r18, r22
 5aa:	ac 01       	movw	r20, r24
 5ac:	bd 01       	movw	r22, r26
 5ae:	cf 01       	movw	r24, r30
 5b0:	08 95       	ret

000005b2 <sprintf>:
 5b2:	0f 93       	push	r16
 5b4:	1f 93       	push	r17
 5b6:	cf 93       	push	r28
 5b8:	df 93       	push	r29
 5ba:	cd b7       	in	r28, 0x3d	; 61
 5bc:	de b7       	in	r29, 0x3e	; 62
 5be:	2e 97       	sbiw	r28, 0x0e	; 14
 5c0:	0f b6       	in	r0, 0x3f	; 63
 5c2:	f8 94       	cli
 5c4:	de bf       	out	0x3e, r29	; 62
 5c6:	0f be       	out	0x3f, r0	; 63
 5c8:	cd bf       	out	0x3d, r28	; 61
 5ca:	0d 89       	ldd	r16, Y+21	; 0x15
 5cc:	1e 89       	ldd	r17, Y+22	; 0x16
 5ce:	86 e0       	ldi	r24, 0x06	; 6
 5d0:	8c 83       	std	Y+4, r24	; 0x04
 5d2:	1a 83       	std	Y+2, r17	; 0x02
 5d4:	09 83       	std	Y+1, r16	; 0x01
 5d6:	8f ef       	ldi	r24, 0xFF	; 255
 5d8:	9f e7       	ldi	r25, 0x7F	; 127
 5da:	9e 83       	std	Y+6, r25	; 0x06
 5dc:	8d 83       	std	Y+5, r24	; 0x05
 5de:	ae 01       	movw	r20, r28
 5e0:	47 5e       	subi	r20, 0xE7	; 231
 5e2:	5f 4f       	sbci	r21, 0xFF	; 255
 5e4:	6f 89       	ldd	r22, Y+23	; 0x17
 5e6:	78 8d       	ldd	r23, Y+24	; 0x18
 5e8:	ce 01       	movw	r24, r28
 5ea:	01 96       	adiw	r24, 0x01	; 1
 5ec:	10 d0       	rcall	.+32     	; 0x60e <vfprintf>
 5ee:	ef 81       	ldd	r30, Y+7	; 0x07
 5f0:	f8 85       	ldd	r31, Y+8	; 0x08
 5f2:	e0 0f       	add	r30, r16
 5f4:	f1 1f       	adc	r31, r17
 5f6:	10 82       	st	Z, r1
 5f8:	2e 96       	adiw	r28, 0x0e	; 14
 5fa:	0f b6       	in	r0, 0x3f	; 63
 5fc:	f8 94       	cli
 5fe:	de bf       	out	0x3e, r29	; 62
 600:	0f be       	out	0x3f, r0	; 63
 602:	cd bf       	out	0x3d, r28	; 61
 604:	df 91       	pop	r29
 606:	cf 91       	pop	r28
 608:	1f 91       	pop	r17
 60a:	0f 91       	pop	r16
 60c:	08 95       	ret

0000060e <vfprintf>:
 60e:	2f 92       	push	r2
 610:	3f 92       	push	r3
 612:	4f 92       	push	r4
 614:	5f 92       	push	r5
 616:	6f 92       	push	r6
 618:	7f 92       	push	r7
 61a:	8f 92       	push	r8
 61c:	9f 92       	push	r9
 61e:	af 92       	push	r10
 620:	bf 92       	push	r11
 622:	cf 92       	push	r12
 624:	df 92       	push	r13
 626:	ef 92       	push	r14
 628:	ff 92       	push	r15
 62a:	0f 93       	push	r16
 62c:	1f 93       	push	r17
 62e:	cf 93       	push	r28
 630:	df 93       	push	r29
 632:	cd b7       	in	r28, 0x3d	; 61
 634:	de b7       	in	r29, 0x3e	; 62
 636:	2b 97       	sbiw	r28, 0x0b	; 11
 638:	0f b6       	in	r0, 0x3f	; 63
 63a:	f8 94       	cli
 63c:	de bf       	out	0x3e, r29	; 62
 63e:	0f be       	out	0x3f, r0	; 63
 640:	cd bf       	out	0x3d, r28	; 61
 642:	6c 01       	movw	r12, r24
 644:	7b 01       	movw	r14, r22
 646:	8a 01       	movw	r16, r20
 648:	fc 01       	movw	r30, r24
 64a:	17 82       	std	Z+7, r1	; 0x07
 64c:	16 82       	std	Z+6, r1	; 0x06
 64e:	83 81       	ldd	r24, Z+3	; 0x03
 650:	81 ff       	sbrs	r24, 1
 652:	bf c1       	rjmp	.+894    	; 0x9d2 <vfprintf+0x3c4>
 654:	ce 01       	movw	r24, r28
 656:	01 96       	adiw	r24, 0x01	; 1
 658:	3c 01       	movw	r6, r24
 65a:	f6 01       	movw	r30, r12
 65c:	93 81       	ldd	r25, Z+3	; 0x03
 65e:	f7 01       	movw	r30, r14
 660:	93 fd       	sbrc	r25, 3
 662:	85 91       	lpm	r24, Z+
 664:	93 ff       	sbrs	r25, 3
 666:	81 91       	ld	r24, Z+
 668:	7f 01       	movw	r14, r30
 66a:	88 23       	and	r24, r24
 66c:	09 f4       	brne	.+2      	; 0x670 <vfprintf+0x62>
 66e:	ad c1       	rjmp	.+858    	; 0x9ca <vfprintf+0x3bc>
 670:	85 32       	cpi	r24, 0x25	; 37
 672:	39 f4       	brne	.+14     	; 0x682 <vfprintf+0x74>
 674:	93 fd       	sbrc	r25, 3
 676:	85 91       	lpm	r24, Z+
 678:	93 ff       	sbrs	r25, 3
 67a:	81 91       	ld	r24, Z+
 67c:	7f 01       	movw	r14, r30
 67e:	85 32       	cpi	r24, 0x25	; 37
 680:	21 f4       	brne	.+8      	; 0x68a <vfprintf+0x7c>
 682:	b6 01       	movw	r22, r12
 684:	90 e0       	ldi	r25, 0x00	; 0
 686:	d6 d1       	rcall	.+940    	; 0xa34 <fputc>
 688:	e8 cf       	rjmp	.-48     	; 0x65a <vfprintf+0x4c>
 68a:	91 2c       	mov	r9, r1
 68c:	21 2c       	mov	r2, r1
 68e:	31 2c       	mov	r3, r1
 690:	ff e1       	ldi	r31, 0x1F	; 31
 692:	f3 15       	cp	r31, r3
 694:	d8 f0       	brcs	.+54     	; 0x6cc <vfprintf+0xbe>
 696:	8b 32       	cpi	r24, 0x2B	; 43
 698:	79 f0       	breq	.+30     	; 0x6b8 <vfprintf+0xaa>
 69a:	38 f4       	brcc	.+14     	; 0x6aa <vfprintf+0x9c>
 69c:	80 32       	cpi	r24, 0x20	; 32
 69e:	79 f0       	breq	.+30     	; 0x6be <vfprintf+0xb0>
 6a0:	83 32       	cpi	r24, 0x23	; 35
 6a2:	a1 f4       	brne	.+40     	; 0x6cc <vfprintf+0xbe>
 6a4:	23 2d       	mov	r18, r3
 6a6:	20 61       	ori	r18, 0x10	; 16
 6a8:	1d c0       	rjmp	.+58     	; 0x6e4 <vfprintf+0xd6>
 6aa:	8d 32       	cpi	r24, 0x2D	; 45
 6ac:	61 f0       	breq	.+24     	; 0x6c6 <vfprintf+0xb8>
 6ae:	80 33       	cpi	r24, 0x30	; 48
 6b0:	69 f4       	brne	.+26     	; 0x6cc <vfprintf+0xbe>
 6b2:	23 2d       	mov	r18, r3
 6b4:	21 60       	ori	r18, 0x01	; 1
 6b6:	16 c0       	rjmp	.+44     	; 0x6e4 <vfprintf+0xd6>
 6b8:	83 2d       	mov	r24, r3
 6ba:	82 60       	ori	r24, 0x02	; 2
 6bc:	38 2e       	mov	r3, r24
 6be:	e3 2d       	mov	r30, r3
 6c0:	e4 60       	ori	r30, 0x04	; 4
 6c2:	3e 2e       	mov	r3, r30
 6c4:	2a c0       	rjmp	.+84     	; 0x71a <vfprintf+0x10c>
 6c6:	f3 2d       	mov	r31, r3
 6c8:	f8 60       	ori	r31, 0x08	; 8
 6ca:	1d c0       	rjmp	.+58     	; 0x706 <vfprintf+0xf8>
 6cc:	37 fc       	sbrc	r3, 7
 6ce:	2d c0       	rjmp	.+90     	; 0x72a <vfprintf+0x11c>
 6d0:	20 ed       	ldi	r18, 0xD0	; 208
 6d2:	28 0f       	add	r18, r24
 6d4:	2a 30       	cpi	r18, 0x0A	; 10
 6d6:	40 f0       	brcs	.+16     	; 0x6e8 <vfprintf+0xda>
 6d8:	8e 32       	cpi	r24, 0x2E	; 46
 6da:	b9 f4       	brne	.+46     	; 0x70a <vfprintf+0xfc>
 6dc:	36 fc       	sbrc	r3, 6
 6de:	75 c1       	rjmp	.+746    	; 0x9ca <vfprintf+0x3bc>
 6e0:	23 2d       	mov	r18, r3
 6e2:	20 64       	ori	r18, 0x40	; 64
 6e4:	32 2e       	mov	r3, r18
 6e6:	19 c0       	rjmp	.+50     	; 0x71a <vfprintf+0x10c>
 6e8:	36 fe       	sbrs	r3, 6
 6ea:	06 c0       	rjmp	.+12     	; 0x6f8 <vfprintf+0xea>
 6ec:	8a e0       	ldi	r24, 0x0A	; 10
 6ee:	98 9e       	mul	r9, r24
 6f0:	20 0d       	add	r18, r0
 6f2:	11 24       	eor	r1, r1
 6f4:	92 2e       	mov	r9, r18
 6f6:	11 c0       	rjmp	.+34     	; 0x71a <vfprintf+0x10c>
 6f8:	ea e0       	ldi	r30, 0x0A	; 10
 6fa:	2e 9e       	mul	r2, r30
 6fc:	20 0d       	add	r18, r0
 6fe:	11 24       	eor	r1, r1
 700:	22 2e       	mov	r2, r18
 702:	f3 2d       	mov	r31, r3
 704:	f0 62       	ori	r31, 0x20	; 32
 706:	3f 2e       	mov	r3, r31
 708:	08 c0       	rjmp	.+16     	; 0x71a <vfprintf+0x10c>
 70a:	8c 36       	cpi	r24, 0x6C	; 108
 70c:	21 f4       	brne	.+8      	; 0x716 <vfprintf+0x108>
 70e:	83 2d       	mov	r24, r3
 710:	80 68       	ori	r24, 0x80	; 128
 712:	38 2e       	mov	r3, r24
 714:	02 c0       	rjmp	.+4      	; 0x71a <vfprintf+0x10c>
 716:	88 36       	cpi	r24, 0x68	; 104
 718:	41 f4       	brne	.+16     	; 0x72a <vfprintf+0x11c>
 71a:	f7 01       	movw	r30, r14
 71c:	93 fd       	sbrc	r25, 3
 71e:	85 91       	lpm	r24, Z+
 720:	93 ff       	sbrs	r25, 3
 722:	81 91       	ld	r24, Z+
 724:	7f 01       	movw	r14, r30
 726:	81 11       	cpse	r24, r1
 728:	b3 cf       	rjmp	.-154    	; 0x690 <vfprintf+0x82>
 72a:	98 2f       	mov	r25, r24
 72c:	9f 7d       	andi	r25, 0xDF	; 223
 72e:	95 54       	subi	r25, 0x45	; 69
 730:	93 30       	cpi	r25, 0x03	; 3
 732:	28 f4       	brcc	.+10     	; 0x73e <vfprintf+0x130>
 734:	0c 5f       	subi	r16, 0xFC	; 252
 736:	1f 4f       	sbci	r17, 0xFF	; 255
 738:	9f e3       	ldi	r25, 0x3F	; 63
 73a:	99 83       	std	Y+1, r25	; 0x01
 73c:	0d c0       	rjmp	.+26     	; 0x758 <vfprintf+0x14a>
 73e:	83 36       	cpi	r24, 0x63	; 99
 740:	31 f0       	breq	.+12     	; 0x74e <vfprintf+0x140>
 742:	83 37       	cpi	r24, 0x73	; 115
 744:	71 f0       	breq	.+28     	; 0x762 <vfprintf+0x154>
 746:	83 35       	cpi	r24, 0x53	; 83
 748:	09 f0       	breq	.+2      	; 0x74c <vfprintf+0x13e>
 74a:	55 c0       	rjmp	.+170    	; 0x7f6 <vfprintf+0x1e8>
 74c:	20 c0       	rjmp	.+64     	; 0x78e <vfprintf+0x180>
 74e:	f8 01       	movw	r30, r16
 750:	80 81       	ld	r24, Z
 752:	89 83       	std	Y+1, r24	; 0x01
 754:	0e 5f       	subi	r16, 0xFE	; 254
 756:	1f 4f       	sbci	r17, 0xFF	; 255
 758:	88 24       	eor	r8, r8
 75a:	83 94       	inc	r8
 75c:	91 2c       	mov	r9, r1
 75e:	53 01       	movw	r10, r6
 760:	12 c0       	rjmp	.+36     	; 0x786 <vfprintf+0x178>
 762:	28 01       	movw	r4, r16
 764:	f2 e0       	ldi	r31, 0x02	; 2
 766:	4f 0e       	add	r4, r31
 768:	51 1c       	adc	r5, r1
 76a:	f8 01       	movw	r30, r16
 76c:	a0 80       	ld	r10, Z
 76e:	b1 80       	ldd	r11, Z+1	; 0x01
 770:	36 fe       	sbrs	r3, 6
 772:	03 c0       	rjmp	.+6      	; 0x77a <vfprintf+0x16c>
 774:	69 2d       	mov	r22, r9
 776:	70 e0       	ldi	r23, 0x00	; 0
 778:	02 c0       	rjmp	.+4      	; 0x77e <vfprintf+0x170>
 77a:	6f ef       	ldi	r22, 0xFF	; 255
 77c:	7f ef       	ldi	r23, 0xFF	; 255
 77e:	c5 01       	movw	r24, r10
 780:	4e d1       	rcall	.+668    	; 0xa1e <strnlen>
 782:	4c 01       	movw	r8, r24
 784:	82 01       	movw	r16, r4
 786:	f3 2d       	mov	r31, r3
 788:	ff 77       	andi	r31, 0x7F	; 127
 78a:	3f 2e       	mov	r3, r31
 78c:	15 c0       	rjmp	.+42     	; 0x7b8 <vfprintf+0x1aa>
 78e:	28 01       	movw	r4, r16
 790:	22 e0       	ldi	r18, 0x02	; 2
 792:	42 0e       	add	r4, r18
 794:	51 1c       	adc	r5, r1
 796:	f8 01       	movw	r30, r16
 798:	a0 80       	ld	r10, Z
 79a:	b1 80       	ldd	r11, Z+1	; 0x01
 79c:	36 fe       	sbrs	r3, 6
 79e:	03 c0       	rjmp	.+6      	; 0x7a6 <vfprintf+0x198>
 7a0:	69 2d       	mov	r22, r9
 7a2:	70 e0       	ldi	r23, 0x00	; 0
 7a4:	02 c0       	rjmp	.+4      	; 0x7aa <vfprintf+0x19c>
 7a6:	6f ef       	ldi	r22, 0xFF	; 255
 7a8:	7f ef       	ldi	r23, 0xFF	; 255
 7aa:	c5 01       	movw	r24, r10
 7ac:	2d d1       	rcall	.+602    	; 0xa08 <strnlen_P>
 7ae:	4c 01       	movw	r8, r24
 7b0:	f3 2d       	mov	r31, r3
 7b2:	f0 68       	ori	r31, 0x80	; 128
 7b4:	3f 2e       	mov	r3, r31
 7b6:	82 01       	movw	r16, r4
 7b8:	33 fc       	sbrc	r3, 3
 7ba:	19 c0       	rjmp	.+50     	; 0x7ee <vfprintf+0x1e0>
 7bc:	82 2d       	mov	r24, r2
 7be:	90 e0       	ldi	r25, 0x00	; 0
 7c0:	88 16       	cp	r8, r24
 7c2:	99 06       	cpc	r9, r25
 7c4:	a0 f4       	brcc	.+40     	; 0x7ee <vfprintf+0x1e0>
 7c6:	b6 01       	movw	r22, r12
 7c8:	80 e2       	ldi	r24, 0x20	; 32
 7ca:	90 e0       	ldi	r25, 0x00	; 0
 7cc:	33 d1       	rcall	.+614    	; 0xa34 <fputc>
 7ce:	2a 94       	dec	r2
 7d0:	f5 cf       	rjmp	.-22     	; 0x7bc <vfprintf+0x1ae>
 7d2:	f5 01       	movw	r30, r10
 7d4:	37 fc       	sbrc	r3, 7
 7d6:	85 91       	lpm	r24, Z+
 7d8:	37 fe       	sbrs	r3, 7
 7da:	81 91       	ld	r24, Z+
 7dc:	5f 01       	movw	r10, r30
 7de:	b6 01       	movw	r22, r12
 7e0:	90 e0       	ldi	r25, 0x00	; 0
 7e2:	28 d1       	rcall	.+592    	; 0xa34 <fputc>
 7e4:	21 10       	cpse	r2, r1
 7e6:	2a 94       	dec	r2
 7e8:	21 e0       	ldi	r18, 0x01	; 1
 7ea:	82 1a       	sub	r8, r18
 7ec:	91 08       	sbc	r9, r1
 7ee:	81 14       	cp	r8, r1
 7f0:	91 04       	cpc	r9, r1
 7f2:	79 f7       	brne	.-34     	; 0x7d2 <vfprintf+0x1c4>
 7f4:	e1 c0       	rjmp	.+450    	; 0x9b8 <vfprintf+0x3aa>
 7f6:	84 36       	cpi	r24, 0x64	; 100
 7f8:	11 f0       	breq	.+4      	; 0x7fe <vfprintf+0x1f0>
 7fa:	89 36       	cpi	r24, 0x69	; 105
 7fc:	39 f5       	brne	.+78     	; 0x84c <vfprintf+0x23e>
 7fe:	f8 01       	movw	r30, r16
 800:	37 fe       	sbrs	r3, 7
 802:	07 c0       	rjmp	.+14     	; 0x812 <vfprintf+0x204>
 804:	60 81       	ld	r22, Z
 806:	71 81       	ldd	r23, Z+1	; 0x01
 808:	82 81       	ldd	r24, Z+2	; 0x02
 80a:	93 81       	ldd	r25, Z+3	; 0x03
 80c:	0c 5f       	subi	r16, 0xFC	; 252
 80e:	1f 4f       	sbci	r17, 0xFF	; 255
 810:	08 c0       	rjmp	.+16     	; 0x822 <vfprintf+0x214>
 812:	60 81       	ld	r22, Z
 814:	71 81       	ldd	r23, Z+1	; 0x01
 816:	07 2e       	mov	r0, r23
 818:	00 0c       	add	r0, r0
 81a:	88 0b       	sbc	r24, r24
 81c:	99 0b       	sbc	r25, r25
 81e:	0e 5f       	subi	r16, 0xFE	; 254
 820:	1f 4f       	sbci	r17, 0xFF	; 255
 822:	f3 2d       	mov	r31, r3
 824:	ff 76       	andi	r31, 0x6F	; 111
 826:	3f 2e       	mov	r3, r31
 828:	97 ff       	sbrs	r25, 7
 82a:	09 c0       	rjmp	.+18     	; 0x83e <vfprintf+0x230>
 82c:	90 95       	com	r25
 82e:	80 95       	com	r24
 830:	70 95       	com	r23
 832:	61 95       	neg	r22
 834:	7f 4f       	sbci	r23, 0xFF	; 255
 836:	8f 4f       	sbci	r24, 0xFF	; 255
 838:	9f 4f       	sbci	r25, 0xFF	; 255
 83a:	f0 68       	ori	r31, 0x80	; 128
 83c:	3f 2e       	mov	r3, r31
 83e:	2a e0       	ldi	r18, 0x0A	; 10
 840:	30 e0       	ldi	r19, 0x00	; 0
 842:	a3 01       	movw	r20, r6
 844:	33 d1       	rcall	.+614    	; 0xaac <__ultoa_invert>
 846:	88 2e       	mov	r8, r24
 848:	86 18       	sub	r8, r6
 84a:	44 c0       	rjmp	.+136    	; 0x8d4 <vfprintf+0x2c6>
 84c:	85 37       	cpi	r24, 0x75	; 117
 84e:	31 f4       	brne	.+12     	; 0x85c <vfprintf+0x24e>
 850:	23 2d       	mov	r18, r3
 852:	2f 7e       	andi	r18, 0xEF	; 239
 854:	b2 2e       	mov	r11, r18
 856:	2a e0       	ldi	r18, 0x0A	; 10
 858:	30 e0       	ldi	r19, 0x00	; 0
 85a:	25 c0       	rjmp	.+74     	; 0x8a6 <vfprintf+0x298>
 85c:	93 2d       	mov	r25, r3
 85e:	99 7f       	andi	r25, 0xF9	; 249
 860:	b9 2e       	mov	r11, r25
 862:	8f 36       	cpi	r24, 0x6F	; 111
 864:	c1 f0       	breq	.+48     	; 0x896 <vfprintf+0x288>
 866:	18 f4       	brcc	.+6      	; 0x86e <vfprintf+0x260>
 868:	88 35       	cpi	r24, 0x58	; 88
 86a:	79 f0       	breq	.+30     	; 0x88a <vfprintf+0x27c>
 86c:	ae c0       	rjmp	.+348    	; 0x9ca <vfprintf+0x3bc>
 86e:	80 37       	cpi	r24, 0x70	; 112
 870:	19 f0       	breq	.+6      	; 0x878 <vfprintf+0x26a>
 872:	88 37       	cpi	r24, 0x78	; 120
 874:	21 f0       	breq	.+8      	; 0x87e <vfprintf+0x270>
 876:	a9 c0       	rjmp	.+338    	; 0x9ca <vfprintf+0x3bc>
 878:	e9 2f       	mov	r30, r25
 87a:	e0 61       	ori	r30, 0x10	; 16
 87c:	be 2e       	mov	r11, r30
 87e:	b4 fe       	sbrs	r11, 4
 880:	0d c0       	rjmp	.+26     	; 0x89c <vfprintf+0x28e>
 882:	fb 2d       	mov	r31, r11
 884:	f4 60       	ori	r31, 0x04	; 4
 886:	bf 2e       	mov	r11, r31
 888:	09 c0       	rjmp	.+18     	; 0x89c <vfprintf+0x28e>
 88a:	34 fe       	sbrs	r3, 4
 88c:	0a c0       	rjmp	.+20     	; 0x8a2 <vfprintf+0x294>
 88e:	29 2f       	mov	r18, r25
 890:	26 60       	ori	r18, 0x06	; 6
 892:	b2 2e       	mov	r11, r18
 894:	06 c0       	rjmp	.+12     	; 0x8a2 <vfprintf+0x294>
 896:	28 e0       	ldi	r18, 0x08	; 8
 898:	30 e0       	ldi	r19, 0x00	; 0
 89a:	05 c0       	rjmp	.+10     	; 0x8a6 <vfprintf+0x298>
 89c:	20 e1       	ldi	r18, 0x10	; 16
 89e:	30 e0       	ldi	r19, 0x00	; 0
 8a0:	02 c0       	rjmp	.+4      	; 0x8a6 <vfprintf+0x298>
 8a2:	20 e1       	ldi	r18, 0x10	; 16
 8a4:	32 e0       	ldi	r19, 0x02	; 2
 8a6:	f8 01       	movw	r30, r16
 8a8:	b7 fe       	sbrs	r11, 7
 8aa:	07 c0       	rjmp	.+14     	; 0x8ba <vfprintf+0x2ac>
 8ac:	60 81       	ld	r22, Z
 8ae:	71 81       	ldd	r23, Z+1	; 0x01
 8b0:	82 81       	ldd	r24, Z+2	; 0x02
 8b2:	93 81       	ldd	r25, Z+3	; 0x03
 8b4:	0c 5f       	subi	r16, 0xFC	; 252
 8b6:	1f 4f       	sbci	r17, 0xFF	; 255
 8b8:	06 c0       	rjmp	.+12     	; 0x8c6 <vfprintf+0x2b8>
 8ba:	60 81       	ld	r22, Z
 8bc:	71 81       	ldd	r23, Z+1	; 0x01
 8be:	80 e0       	ldi	r24, 0x00	; 0
 8c0:	90 e0       	ldi	r25, 0x00	; 0
 8c2:	0e 5f       	subi	r16, 0xFE	; 254
 8c4:	1f 4f       	sbci	r17, 0xFF	; 255
 8c6:	a3 01       	movw	r20, r6
 8c8:	f1 d0       	rcall	.+482    	; 0xaac <__ultoa_invert>
 8ca:	88 2e       	mov	r8, r24
 8cc:	86 18       	sub	r8, r6
 8ce:	fb 2d       	mov	r31, r11
 8d0:	ff 77       	andi	r31, 0x7F	; 127
 8d2:	3f 2e       	mov	r3, r31
 8d4:	36 fe       	sbrs	r3, 6
 8d6:	0d c0       	rjmp	.+26     	; 0x8f2 <vfprintf+0x2e4>
 8d8:	23 2d       	mov	r18, r3
 8da:	2e 7f       	andi	r18, 0xFE	; 254
 8dc:	a2 2e       	mov	r10, r18
 8de:	89 14       	cp	r8, r9
 8e0:	58 f4       	brcc	.+22     	; 0x8f8 <vfprintf+0x2ea>
 8e2:	34 fe       	sbrs	r3, 4
 8e4:	0b c0       	rjmp	.+22     	; 0x8fc <vfprintf+0x2ee>
 8e6:	32 fc       	sbrc	r3, 2
 8e8:	09 c0       	rjmp	.+18     	; 0x8fc <vfprintf+0x2ee>
 8ea:	83 2d       	mov	r24, r3
 8ec:	8e 7e       	andi	r24, 0xEE	; 238
 8ee:	a8 2e       	mov	r10, r24
 8f0:	05 c0       	rjmp	.+10     	; 0x8fc <vfprintf+0x2ee>
 8f2:	b8 2c       	mov	r11, r8
 8f4:	a3 2c       	mov	r10, r3
 8f6:	03 c0       	rjmp	.+6      	; 0x8fe <vfprintf+0x2f0>
 8f8:	b8 2c       	mov	r11, r8
 8fa:	01 c0       	rjmp	.+2      	; 0x8fe <vfprintf+0x2f0>
 8fc:	b9 2c       	mov	r11, r9
 8fe:	a4 fe       	sbrs	r10, 4
 900:	0f c0       	rjmp	.+30     	; 0x920 <vfprintf+0x312>
 902:	fe 01       	movw	r30, r28
 904:	e8 0d       	add	r30, r8
 906:	f1 1d       	adc	r31, r1
 908:	80 81       	ld	r24, Z
 90a:	80 33       	cpi	r24, 0x30	; 48
 90c:	21 f4       	brne	.+8      	; 0x916 <vfprintf+0x308>
 90e:	9a 2d       	mov	r25, r10
 910:	99 7e       	andi	r25, 0xE9	; 233
 912:	a9 2e       	mov	r10, r25
 914:	09 c0       	rjmp	.+18     	; 0x928 <vfprintf+0x31a>
 916:	a2 fe       	sbrs	r10, 2
 918:	06 c0       	rjmp	.+12     	; 0x926 <vfprintf+0x318>
 91a:	b3 94       	inc	r11
 91c:	b3 94       	inc	r11
 91e:	04 c0       	rjmp	.+8      	; 0x928 <vfprintf+0x31a>
 920:	8a 2d       	mov	r24, r10
 922:	86 78       	andi	r24, 0x86	; 134
 924:	09 f0       	breq	.+2      	; 0x928 <vfprintf+0x31a>
 926:	b3 94       	inc	r11
 928:	a3 fc       	sbrc	r10, 3
 92a:	10 c0       	rjmp	.+32     	; 0x94c <vfprintf+0x33e>
 92c:	a0 fe       	sbrs	r10, 0
 92e:	06 c0       	rjmp	.+12     	; 0x93c <vfprintf+0x32e>
 930:	b2 14       	cp	r11, r2
 932:	80 f4       	brcc	.+32     	; 0x954 <vfprintf+0x346>
 934:	28 0c       	add	r2, r8
 936:	92 2c       	mov	r9, r2
 938:	9b 18       	sub	r9, r11
 93a:	0d c0       	rjmp	.+26     	; 0x956 <vfprintf+0x348>
 93c:	b2 14       	cp	r11, r2
 93e:	58 f4       	brcc	.+22     	; 0x956 <vfprintf+0x348>
 940:	b6 01       	movw	r22, r12
 942:	80 e2       	ldi	r24, 0x20	; 32
 944:	90 e0       	ldi	r25, 0x00	; 0
 946:	76 d0       	rcall	.+236    	; 0xa34 <fputc>
 948:	b3 94       	inc	r11
 94a:	f8 cf       	rjmp	.-16     	; 0x93c <vfprintf+0x32e>
 94c:	b2 14       	cp	r11, r2
 94e:	18 f4       	brcc	.+6      	; 0x956 <vfprintf+0x348>
 950:	2b 18       	sub	r2, r11
 952:	02 c0       	rjmp	.+4      	; 0x958 <vfprintf+0x34a>
 954:	98 2c       	mov	r9, r8
 956:	21 2c       	mov	r2, r1
 958:	a4 fe       	sbrs	r10, 4
 95a:	0f c0       	rjmp	.+30     	; 0x97a <vfprintf+0x36c>
 95c:	b6 01       	movw	r22, r12
 95e:	80 e3       	ldi	r24, 0x30	; 48
 960:	90 e0       	ldi	r25, 0x00	; 0
 962:	68 d0       	rcall	.+208    	; 0xa34 <fputc>
 964:	a2 fe       	sbrs	r10, 2
 966:	16 c0       	rjmp	.+44     	; 0x994 <vfprintf+0x386>
 968:	a1 fc       	sbrc	r10, 1
 96a:	03 c0       	rjmp	.+6      	; 0x972 <vfprintf+0x364>
 96c:	88 e7       	ldi	r24, 0x78	; 120
 96e:	90 e0       	ldi	r25, 0x00	; 0
 970:	02 c0       	rjmp	.+4      	; 0x976 <vfprintf+0x368>
 972:	88 e5       	ldi	r24, 0x58	; 88
 974:	90 e0       	ldi	r25, 0x00	; 0
 976:	b6 01       	movw	r22, r12
 978:	0c c0       	rjmp	.+24     	; 0x992 <vfprintf+0x384>
 97a:	8a 2d       	mov	r24, r10
 97c:	86 78       	andi	r24, 0x86	; 134
 97e:	51 f0       	breq	.+20     	; 0x994 <vfprintf+0x386>
 980:	a1 fe       	sbrs	r10, 1
 982:	02 c0       	rjmp	.+4      	; 0x988 <vfprintf+0x37a>
 984:	8b e2       	ldi	r24, 0x2B	; 43
 986:	01 c0       	rjmp	.+2      	; 0x98a <vfprintf+0x37c>
 988:	80 e2       	ldi	r24, 0x20	; 32
 98a:	a7 fc       	sbrc	r10, 7
 98c:	8d e2       	ldi	r24, 0x2D	; 45
 98e:	b6 01       	movw	r22, r12
 990:	90 e0       	ldi	r25, 0x00	; 0
 992:	50 d0       	rcall	.+160    	; 0xa34 <fputc>
 994:	89 14       	cp	r8, r9
 996:	30 f4       	brcc	.+12     	; 0x9a4 <vfprintf+0x396>
 998:	b6 01       	movw	r22, r12
 99a:	80 e3       	ldi	r24, 0x30	; 48
 99c:	90 e0       	ldi	r25, 0x00	; 0
 99e:	4a d0       	rcall	.+148    	; 0xa34 <fputc>
 9a0:	9a 94       	dec	r9
 9a2:	f8 cf       	rjmp	.-16     	; 0x994 <vfprintf+0x386>
 9a4:	8a 94       	dec	r8
 9a6:	f3 01       	movw	r30, r6
 9a8:	e8 0d       	add	r30, r8
 9aa:	f1 1d       	adc	r31, r1
 9ac:	80 81       	ld	r24, Z
 9ae:	b6 01       	movw	r22, r12
 9b0:	90 e0       	ldi	r25, 0x00	; 0
 9b2:	40 d0       	rcall	.+128    	; 0xa34 <fputc>
 9b4:	81 10       	cpse	r8, r1
 9b6:	f6 cf       	rjmp	.-20     	; 0x9a4 <vfprintf+0x396>
 9b8:	22 20       	and	r2, r2
 9ba:	09 f4       	brne	.+2      	; 0x9be <vfprintf+0x3b0>
 9bc:	4e ce       	rjmp	.-868    	; 0x65a <vfprintf+0x4c>
 9be:	b6 01       	movw	r22, r12
 9c0:	80 e2       	ldi	r24, 0x20	; 32
 9c2:	90 e0       	ldi	r25, 0x00	; 0
 9c4:	37 d0       	rcall	.+110    	; 0xa34 <fputc>
 9c6:	2a 94       	dec	r2
 9c8:	f7 cf       	rjmp	.-18     	; 0x9b8 <vfprintf+0x3aa>
 9ca:	f6 01       	movw	r30, r12
 9cc:	86 81       	ldd	r24, Z+6	; 0x06
 9ce:	97 81       	ldd	r25, Z+7	; 0x07
 9d0:	02 c0       	rjmp	.+4      	; 0x9d6 <vfprintf+0x3c8>
 9d2:	8f ef       	ldi	r24, 0xFF	; 255
 9d4:	9f ef       	ldi	r25, 0xFF	; 255
 9d6:	2b 96       	adiw	r28, 0x0b	; 11
 9d8:	0f b6       	in	r0, 0x3f	; 63
 9da:	f8 94       	cli
 9dc:	de bf       	out	0x3e, r29	; 62
 9de:	0f be       	out	0x3f, r0	; 63
 9e0:	cd bf       	out	0x3d, r28	; 61
 9e2:	df 91       	pop	r29
 9e4:	cf 91       	pop	r28
 9e6:	1f 91       	pop	r17
 9e8:	0f 91       	pop	r16
 9ea:	ff 90       	pop	r15
 9ec:	ef 90       	pop	r14
 9ee:	df 90       	pop	r13
 9f0:	cf 90       	pop	r12
 9f2:	bf 90       	pop	r11
 9f4:	af 90       	pop	r10
 9f6:	9f 90       	pop	r9
 9f8:	8f 90       	pop	r8
 9fa:	7f 90       	pop	r7
 9fc:	6f 90       	pop	r6
 9fe:	5f 90       	pop	r5
 a00:	4f 90       	pop	r4
 a02:	3f 90       	pop	r3
 a04:	2f 90       	pop	r2
 a06:	08 95       	ret

00000a08 <strnlen_P>:
 a08:	fc 01       	movw	r30, r24
 a0a:	05 90       	lpm	r0, Z+
 a0c:	61 50       	subi	r22, 0x01	; 1
 a0e:	70 40       	sbci	r23, 0x00	; 0
 a10:	01 10       	cpse	r0, r1
 a12:	d8 f7       	brcc	.-10     	; 0xa0a <strnlen_P+0x2>
 a14:	80 95       	com	r24
 a16:	90 95       	com	r25
 a18:	8e 0f       	add	r24, r30
 a1a:	9f 1f       	adc	r25, r31
 a1c:	08 95       	ret

00000a1e <strnlen>:
 a1e:	fc 01       	movw	r30, r24
 a20:	61 50       	subi	r22, 0x01	; 1
 a22:	70 40       	sbci	r23, 0x00	; 0
 a24:	01 90       	ld	r0, Z+
 a26:	01 10       	cpse	r0, r1
 a28:	d8 f7       	brcc	.-10     	; 0xa20 <strnlen+0x2>
 a2a:	80 95       	com	r24
 a2c:	90 95       	com	r25
 a2e:	8e 0f       	add	r24, r30
 a30:	9f 1f       	adc	r25, r31
 a32:	08 95       	ret

00000a34 <fputc>:
 a34:	0f 93       	push	r16
 a36:	1f 93       	push	r17
 a38:	cf 93       	push	r28
 a3a:	df 93       	push	r29
 a3c:	fb 01       	movw	r30, r22
 a3e:	23 81       	ldd	r18, Z+3	; 0x03
 a40:	21 fd       	sbrc	r18, 1
 a42:	03 c0       	rjmp	.+6      	; 0xa4a <fputc+0x16>
 a44:	8f ef       	ldi	r24, 0xFF	; 255
 a46:	9f ef       	ldi	r25, 0xFF	; 255
 a48:	2c c0       	rjmp	.+88     	; 0xaa2 <fputc+0x6e>
 a4a:	22 ff       	sbrs	r18, 2
 a4c:	16 c0       	rjmp	.+44     	; 0xa7a <fputc+0x46>
 a4e:	46 81       	ldd	r20, Z+6	; 0x06
 a50:	57 81       	ldd	r21, Z+7	; 0x07
 a52:	24 81       	ldd	r18, Z+4	; 0x04
 a54:	35 81       	ldd	r19, Z+5	; 0x05
 a56:	42 17       	cp	r20, r18
 a58:	53 07       	cpc	r21, r19
 a5a:	44 f4       	brge	.+16     	; 0xa6c <fputc+0x38>
 a5c:	a0 81       	ld	r26, Z
 a5e:	b1 81       	ldd	r27, Z+1	; 0x01
 a60:	9d 01       	movw	r18, r26
 a62:	2f 5f       	subi	r18, 0xFF	; 255
 a64:	3f 4f       	sbci	r19, 0xFF	; 255
 a66:	31 83       	std	Z+1, r19	; 0x01
 a68:	20 83       	st	Z, r18
 a6a:	8c 93       	st	X, r24
 a6c:	26 81       	ldd	r18, Z+6	; 0x06
 a6e:	37 81       	ldd	r19, Z+7	; 0x07
 a70:	2f 5f       	subi	r18, 0xFF	; 255
 a72:	3f 4f       	sbci	r19, 0xFF	; 255
 a74:	37 83       	std	Z+7, r19	; 0x07
 a76:	26 83       	std	Z+6, r18	; 0x06
 a78:	14 c0       	rjmp	.+40     	; 0xaa2 <fputc+0x6e>
 a7a:	8b 01       	movw	r16, r22
 a7c:	ec 01       	movw	r28, r24
 a7e:	fb 01       	movw	r30, r22
 a80:	00 84       	ldd	r0, Z+8	; 0x08
 a82:	f1 85       	ldd	r31, Z+9	; 0x09
 a84:	e0 2d       	mov	r30, r0
 a86:	09 95       	icall
 a88:	89 2b       	or	r24, r25
 a8a:	e1 f6       	brne	.-72     	; 0xa44 <fputc+0x10>
 a8c:	d8 01       	movw	r26, r16
 a8e:	16 96       	adiw	r26, 0x06	; 6
 a90:	8d 91       	ld	r24, X+
 a92:	9c 91       	ld	r25, X
 a94:	17 97       	sbiw	r26, 0x07	; 7
 a96:	01 96       	adiw	r24, 0x01	; 1
 a98:	17 96       	adiw	r26, 0x07	; 7
 a9a:	9c 93       	st	X, r25
 a9c:	8e 93       	st	-X, r24
 a9e:	16 97       	sbiw	r26, 0x06	; 6
 aa0:	ce 01       	movw	r24, r28
 aa2:	df 91       	pop	r29
 aa4:	cf 91       	pop	r28
 aa6:	1f 91       	pop	r17
 aa8:	0f 91       	pop	r16
 aaa:	08 95       	ret

00000aac <__ultoa_invert>:
 aac:	fa 01       	movw	r30, r20
 aae:	aa 27       	eor	r26, r26
 ab0:	28 30       	cpi	r18, 0x08	; 8
 ab2:	51 f1       	breq	.+84     	; 0xb08 <__ultoa_invert+0x5c>
 ab4:	20 31       	cpi	r18, 0x10	; 16
 ab6:	81 f1       	breq	.+96     	; 0xb18 <__ultoa_invert+0x6c>
 ab8:	e8 94       	clt
 aba:	6f 93       	push	r22
 abc:	6e 7f       	andi	r22, 0xFE	; 254
 abe:	6e 5f       	subi	r22, 0xFE	; 254
 ac0:	7f 4f       	sbci	r23, 0xFF	; 255
 ac2:	8f 4f       	sbci	r24, 0xFF	; 255
 ac4:	9f 4f       	sbci	r25, 0xFF	; 255
 ac6:	af 4f       	sbci	r26, 0xFF	; 255
 ac8:	b1 e0       	ldi	r27, 0x01	; 1
 aca:	3e d0       	rcall	.+124    	; 0xb48 <__ultoa_invert+0x9c>
 acc:	b4 e0       	ldi	r27, 0x04	; 4
 ace:	3c d0       	rcall	.+120    	; 0xb48 <__ultoa_invert+0x9c>
 ad0:	67 0f       	add	r22, r23
 ad2:	78 1f       	adc	r23, r24
 ad4:	89 1f       	adc	r24, r25
 ad6:	9a 1f       	adc	r25, r26
 ad8:	a1 1d       	adc	r26, r1
 ada:	68 0f       	add	r22, r24
 adc:	79 1f       	adc	r23, r25
 ade:	8a 1f       	adc	r24, r26
 ae0:	91 1d       	adc	r25, r1
 ae2:	a1 1d       	adc	r26, r1
 ae4:	6a 0f       	add	r22, r26
 ae6:	71 1d       	adc	r23, r1
 ae8:	81 1d       	adc	r24, r1
 aea:	91 1d       	adc	r25, r1
 aec:	a1 1d       	adc	r26, r1
 aee:	20 d0       	rcall	.+64     	; 0xb30 <__ultoa_invert+0x84>
 af0:	09 f4       	brne	.+2      	; 0xaf4 <__ultoa_invert+0x48>
 af2:	68 94       	set
 af4:	3f 91       	pop	r19
 af6:	2a e0       	ldi	r18, 0x0A	; 10
 af8:	26 9f       	mul	r18, r22
 afa:	11 24       	eor	r1, r1
 afc:	30 19       	sub	r19, r0
 afe:	30 5d       	subi	r19, 0xD0	; 208
 b00:	31 93       	st	Z+, r19
 b02:	de f6       	brtc	.-74     	; 0xaba <__ultoa_invert+0xe>
 b04:	cf 01       	movw	r24, r30
 b06:	08 95       	ret
 b08:	46 2f       	mov	r20, r22
 b0a:	47 70       	andi	r20, 0x07	; 7
 b0c:	40 5d       	subi	r20, 0xD0	; 208
 b0e:	41 93       	st	Z+, r20
 b10:	b3 e0       	ldi	r27, 0x03	; 3
 b12:	0f d0       	rcall	.+30     	; 0xb32 <__ultoa_invert+0x86>
 b14:	c9 f7       	brne	.-14     	; 0xb08 <__ultoa_invert+0x5c>
 b16:	f6 cf       	rjmp	.-20     	; 0xb04 <__ultoa_invert+0x58>
 b18:	46 2f       	mov	r20, r22
 b1a:	4f 70       	andi	r20, 0x0F	; 15
 b1c:	40 5d       	subi	r20, 0xD0	; 208
 b1e:	4a 33       	cpi	r20, 0x3A	; 58
 b20:	18 f0       	brcs	.+6      	; 0xb28 <__ultoa_invert+0x7c>
 b22:	49 5d       	subi	r20, 0xD9	; 217
 b24:	31 fd       	sbrc	r19, 1
 b26:	40 52       	subi	r20, 0x20	; 32
 b28:	41 93       	st	Z+, r20
 b2a:	02 d0       	rcall	.+4      	; 0xb30 <__ultoa_invert+0x84>
 b2c:	a9 f7       	brne	.-22     	; 0xb18 <__ultoa_invert+0x6c>
 b2e:	ea cf       	rjmp	.-44     	; 0xb04 <__ultoa_invert+0x58>
 b30:	b4 e0       	ldi	r27, 0x04	; 4
 b32:	a6 95       	lsr	r26
 b34:	97 95       	ror	r25
 b36:	87 95       	ror	r24
 b38:	77 95       	ror	r23
 b3a:	67 95       	ror	r22
 b3c:	ba 95       	dec	r27
 b3e:	c9 f7       	brne	.-14     	; 0xb32 <__ultoa_invert+0x86>
 b40:	00 97       	sbiw	r24, 0x00	; 0
 b42:	61 05       	cpc	r22, r1
 b44:	71 05       	cpc	r23, r1
 b46:	08 95       	ret
 b48:	9b 01       	movw	r18, r22
 b4a:	ac 01       	movw	r20, r24
 b4c:	0a 2e       	mov	r0, r26
 b4e:	06 94       	lsr	r0
 b50:	57 95       	ror	r21
 b52:	47 95       	ror	r20
 b54:	37 95       	ror	r19
 b56:	27 95       	ror	r18
 b58:	ba 95       	dec	r27
 b5a:	c9 f7       	brne	.-14     	; 0xb4e <__ultoa_invert+0xa2>
 b5c:	62 0f       	add	r22, r18
 b5e:	73 1f       	adc	r23, r19
 b60:	84 1f       	adc	r24, r20
 b62:	95 1f       	adc	r25, r21
 b64:	a0 1d       	adc	r26, r0
 b66:	08 95       	ret

00000b68 <_exit>:
 b68:	f8 94       	cli

00000b6a <__stop_program>:
 b6a:	ff cf       	rjmp	.-2      	; 0xb6a <__stop_program>
