
UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00000242  000002b6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000242  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002c6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002f8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  00000334  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000093f  00000000  00000000  00000364  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000087c  00000000  00000000  00000ca3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000379  00000000  00000000  0000151f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00001898  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000422  00000000  00000000  000018dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000071  00000000  00000000  00001cfe  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001d6f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 e4       	ldi	r30, 0x42	; 66
  a0:	f2 e0       	ldi	r31, 0x02	; 2
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a0 31       	cpi	r26, 0x10	; 16
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	0c d0       	rcall	.+24     	; 0xcc <main>
  b4:	c4 c0       	rjmp	.+392    	; 0x23e <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <putch>:
#include <avr/io.h>
#include <util/delay.h>

void putch(unsigned char data)
{
	while((UCSR0A & 0x20)==0);
  b8:	5d 9b       	sbis	0x0b, 5	; 11
  ba:	fe cf       	rjmp	.-4      	; 0xb8 <putch>
	UDR0 = data;
  bc:	8c b9       	out	0x0c, r24	; 12
	UCSR0A |= 0x20;
  be:	5d 9a       	sbi	0x0b, 5	; 11
  c0:	08 95       	ret

000000c2 <getch>:
}

unsigned char getch()
{
	unsigned char data;
	while((UCSR0A & 0x80)==0);
  c2:	5f 9b       	sbis	0x0b, 7	; 11
  c4:	fe cf       	rjmp	.-4      	; 0xc2 <getch>
	data=UDR0;
  c6:	8c b1       	in	r24, 0x0c	; 12
	UCSR0A |= 0x80;
  c8:	5f 9a       	sbi	0x0b, 7	; 11
	return data;
}
  ca:	08 95       	ret

000000cc <main>:
unsigned int DoReMi[8] = {523, 587, 659, 698, 783, 880, 987, 1046};

int main()
{
	unsigned char piano;
	DDRE = 0xFE;
  cc:	8e ef       	ldi	r24, 0xFE	; 254
  ce:	82 b9       	out	0x02, r24	; 2

	// 데이터 통신부분
	UCSR0A = 0x00;
  d0:	1b b8       	out	0x0b, r1	; 11
	UCSR0B = 0x18;
  d2:	88 e1       	ldi	r24, 0x18	; 24
  d4:	8a b9       	out	0x0a, r24	; 10
	UCSR0C = 0x06;
  d6:	86 e0       	ldi	r24, 0x06	; 6
  d8:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <__TEXT_REGION_LENGTH__+0x7e0095>

	UBRR0H = 0x00;
  dc:	10 92 90 00 	sts	0x0090, r1	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
	UBRR0L = 0x03;
  e0:	83 e0       	ldi	r24, 0x03	; 3
  e2:	89 b9       	out	0x09, r24	; 9

	// 부저 부분
	TCCR3A = 0x00;
  e4:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
	TCCR3B = 0x19;
  e8:	89 e1       	ldi	r24, 0x19	; 25
  ea:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	TCCR3C = 0x00;
  ee:	10 92 8c 00 	sts	0x008C, r1	; 0x80008c <__TEXT_REGION_LENGTH__+0x7e008c>
	TCNT3 = 0x0000;
  f2:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
  f6:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
				_delay_ms(100);
				TCCR3A = 0x00;
			}
			else if(piano == '8')
			{
				ICR3 = 7372800/DoReMi[7]/20;
  fa:	81 2c       	mov	r8, r1
  fc:	80 ea       	ldi	r24, 0xA0	; 160
  fe:	98 2e       	mov	r9, r24
 100:	85 e0       	ldi	r24, 0x05	; 5
 102:	a8 2e       	mov	r10, r24
 104:	b1 2c       	mov	r11, r1
				TCCR3A = 0x40;
 106:	d0 e4       	ldi	r29, 0x40	; 64
				_delay_ms(100);
				TCCR3A = 0x00;
			}
			else if(piano == '7')
			{
				ICR3 = 7372800/DoReMi[6]/10;
 108:	c1 2c       	mov	r12, r1
 10a:	90 e4       	ldi	r25, 0x40	; 64
 10c:	d9 2e       	mov	r13, r25
 10e:	9b e0       	ldi	r25, 0x0B	; 11
 110:	e9 2e       	mov	r14, r25
 112:	f1 2c       	mov	r15, r1
	TCNT3 = 0x0000;

	while(1)
	{
		piano = 0;
		piano = getch();
 114:	d6 df       	rcall	.-84     	; 0xc2 <getch>
 116:	c8 2f       	mov	r28, r24
		
		if(piano)
 118:	88 23       	and	r24, r24
		{
			putch(piano);
 11a:	e1 f3       	breq	.-8      	; 0x114 <main+0x48>
 11c:	cd df       	rcall	.-102    	; 0xb8 <putch>
			if(piano == '1')
 11e:	c1 33       	cpi	r28, 0x31	; 49
 120:	29 f4       	brne	.+10     	; 0x12c <main+0x60>
			{
				ICR3 = 7372800/DoReMi[0]/10;
 122:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 126:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 12a:	29 c0       	rjmp	.+82     	; 0x17e <main+0xb2>
				TCCR3A = 0x40;
				_delay_ms(100);
				TCCR3A = 0x00;
			}
			else if(piano == '2')
 12c:	c2 33       	cpi	r28, 0x32	; 50
 12e:	29 f4       	brne	.+10     	; 0x13a <main+0x6e>
			{
				ICR3 = 7372800/DoReMi[1]/10;
 130:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 134:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 138:	22 c0       	rjmp	.+68     	; 0x17e <main+0xb2>
				TCCR3A = 0x40;
				_delay_ms(100);
				TCCR3A = 0x00;
			}
			else if(piano == '3')
 13a:	c3 33       	cpi	r28, 0x33	; 51
 13c:	29 f4       	brne	.+10     	; 0x148 <main+0x7c>
			{
				ICR3 = 7372800/DoReMi[2]/10;
 13e:	20 91 04 01 	lds	r18, 0x0104	; 0x800104 <__DATA_REGION_ORIGIN__+0x4>
 142:	30 91 05 01 	lds	r19, 0x0105	; 0x800105 <__DATA_REGION_ORIGIN__+0x5>
 146:	1b c0       	rjmp	.+54     	; 0x17e <main+0xb2>
				TCCR3A = 0x40;
				_delay_ms(100);
				TCCR3A = 0x00;
			}
			else if(piano == '4')
 148:	c4 33       	cpi	r28, 0x34	; 52
 14a:	29 f4       	brne	.+10     	; 0x156 <main+0x8a>
			{
				ICR3 = 7372800/DoReMi[3]/10;
 14c:	20 91 06 01 	lds	r18, 0x0106	; 0x800106 <__DATA_REGION_ORIGIN__+0x6>
 150:	30 91 07 01 	lds	r19, 0x0107	; 0x800107 <__DATA_REGION_ORIGIN__+0x7>
 154:	14 c0       	rjmp	.+40     	; 0x17e <main+0xb2>
				TCCR3A = 0x40;
				_delay_ms(100);
				TCCR3A = 0x00;
			}
			else if(piano == '5')
 156:	c5 33       	cpi	r28, 0x35	; 53
 158:	29 f4       	brne	.+10     	; 0x164 <main+0x98>
			{
				ICR3 = 7372800/DoReMi[4]/10;
 15a:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__DATA_REGION_ORIGIN__+0x8>
 15e:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__DATA_REGION_ORIGIN__+0x9>
 162:	0d c0       	rjmp	.+26     	; 0x17e <main+0xb2>
				TCCR3A = 0x40;
				_delay_ms(100);
				TCCR3A = 0x00;
			}
			else if(piano == '6')
 164:	c6 33       	cpi	r28, 0x36	; 54
 166:	29 f4       	brne	.+10     	; 0x172 <main+0xa6>
			{
				ICR3 = 7372800/DoReMi[5]/10;
 168:	20 91 0a 01 	lds	r18, 0x010A	; 0x80010a <__DATA_REGION_ORIGIN__+0xa>
 16c:	30 91 0b 01 	lds	r19, 0x010B	; 0x80010b <__DATA_REGION_ORIGIN__+0xb>
 170:	06 c0       	rjmp	.+12     	; 0x17e <main+0xb2>
				TCCR3A = 0x40;
				_delay_ms(100);
				TCCR3A = 0x00;
			}
			else if(piano == '7')
 172:	c7 33       	cpi	r28, 0x37	; 55
 174:	49 f4       	brne	.+18     	; 0x188 <main+0xbc>
			{
				ICR3 = 7372800/DoReMi[6]/10;
 176:	20 91 0c 01 	lds	r18, 0x010C	; 0x80010c <__DATA_REGION_ORIGIN__+0xc>
 17a:	30 91 0d 01 	lds	r19, 0x010D	; 0x80010d <__DATA_REGION_ORIGIN__+0xd>
 17e:	40 e0       	ldi	r20, 0x00	; 0
 180:	50 e0       	ldi	r21, 0x00	; 0
 182:	c7 01       	movw	r24, r14
 184:	b6 01       	movw	r22, r12
 186:	0a c0       	rjmp	.+20     	; 0x19c <main+0xd0>
				TCCR3A = 0x40;
				_delay_ms(100);
				TCCR3A = 0x00;
			}
			else if(piano == '8')
 188:	c8 33       	cpi	r28, 0x38	; 56
 18a:	21 f6       	brne	.-120    	; 0x114 <main+0x48>
			{
				ICR3 = 7372800/DoReMi[7]/20;
 18c:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__DATA_REGION_ORIGIN__+0xe>
 190:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__DATA_REGION_ORIGIN__+0xf>
 194:	40 e0       	ldi	r20, 0x00	; 0
 196:	50 e0       	ldi	r21, 0x00	; 0
 198:	c5 01       	movw	r24, r10
 19a:	b4 01       	movw	r22, r8
 19c:	12 d0       	rcall	.+36     	; 0x1c2 <__divmodsi4>
 19e:	30 93 81 00 	sts	0x0081, r19	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
 1a2:	20 93 80 00 	sts	0x0080, r18	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
				TCCR3A = 0x40;
 1a6:	d0 93 8b 00 	sts	0x008B, r29	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1aa:	2f ef       	ldi	r18, 0xFF	; 255
 1ac:	8f e3       	ldi	r24, 0x3F	; 63
 1ae:	92 e0       	ldi	r25, 0x02	; 2
 1b0:	21 50       	subi	r18, 0x01	; 1
 1b2:	80 40       	sbci	r24, 0x00	; 0
 1b4:	90 40       	sbci	r25, 0x00	; 0
 1b6:	e1 f7       	brne	.-8      	; 0x1b0 <main+0xe4>
 1b8:	00 c0       	rjmp	.+0      	; 0x1ba <main+0xee>
 1ba:	00 00       	nop
				_delay_ms(100);
				TCCR3A = 0x00;
 1bc:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 1c0:	a9 cf       	rjmp	.-174    	; 0x114 <main+0x48>

000001c2 <__divmodsi4>:
 1c2:	05 2e       	mov	r0, r21
 1c4:	97 fb       	bst	r25, 7
 1c6:	16 f4       	brtc	.+4      	; 0x1cc <__divmodsi4+0xa>
 1c8:	00 94       	com	r0
 1ca:	0f d0       	rcall	.+30     	; 0x1ea <__negsi2>
 1cc:	57 fd       	sbrc	r21, 7
 1ce:	05 d0       	rcall	.+10     	; 0x1da <__divmodsi4_neg2>
 1d0:	14 d0       	rcall	.+40     	; 0x1fa <__udivmodsi4>
 1d2:	07 fc       	sbrc	r0, 7
 1d4:	02 d0       	rcall	.+4      	; 0x1da <__divmodsi4_neg2>
 1d6:	46 f4       	brtc	.+16     	; 0x1e8 <__divmodsi4_exit>
 1d8:	08 c0       	rjmp	.+16     	; 0x1ea <__negsi2>

000001da <__divmodsi4_neg2>:
 1da:	50 95       	com	r21
 1dc:	40 95       	com	r20
 1de:	30 95       	com	r19
 1e0:	21 95       	neg	r18
 1e2:	3f 4f       	sbci	r19, 0xFF	; 255
 1e4:	4f 4f       	sbci	r20, 0xFF	; 255
 1e6:	5f 4f       	sbci	r21, 0xFF	; 255

000001e8 <__divmodsi4_exit>:
 1e8:	08 95       	ret

000001ea <__negsi2>:
 1ea:	90 95       	com	r25
 1ec:	80 95       	com	r24
 1ee:	70 95       	com	r23
 1f0:	61 95       	neg	r22
 1f2:	7f 4f       	sbci	r23, 0xFF	; 255
 1f4:	8f 4f       	sbci	r24, 0xFF	; 255
 1f6:	9f 4f       	sbci	r25, 0xFF	; 255
 1f8:	08 95       	ret

000001fa <__udivmodsi4>:
 1fa:	a1 e2       	ldi	r26, 0x21	; 33
 1fc:	1a 2e       	mov	r1, r26
 1fe:	aa 1b       	sub	r26, r26
 200:	bb 1b       	sub	r27, r27
 202:	fd 01       	movw	r30, r26
 204:	0d c0       	rjmp	.+26     	; 0x220 <__udivmodsi4_ep>

00000206 <__udivmodsi4_loop>:
 206:	aa 1f       	adc	r26, r26
 208:	bb 1f       	adc	r27, r27
 20a:	ee 1f       	adc	r30, r30
 20c:	ff 1f       	adc	r31, r31
 20e:	a2 17       	cp	r26, r18
 210:	b3 07       	cpc	r27, r19
 212:	e4 07       	cpc	r30, r20
 214:	f5 07       	cpc	r31, r21
 216:	20 f0       	brcs	.+8      	; 0x220 <__udivmodsi4_ep>
 218:	a2 1b       	sub	r26, r18
 21a:	b3 0b       	sbc	r27, r19
 21c:	e4 0b       	sbc	r30, r20
 21e:	f5 0b       	sbc	r31, r21

00000220 <__udivmodsi4_ep>:
 220:	66 1f       	adc	r22, r22
 222:	77 1f       	adc	r23, r23
 224:	88 1f       	adc	r24, r24
 226:	99 1f       	adc	r25, r25
 228:	1a 94       	dec	r1
 22a:	69 f7       	brne	.-38     	; 0x206 <__udivmodsi4_loop>
 22c:	60 95       	com	r22
 22e:	70 95       	com	r23
 230:	80 95       	com	r24
 232:	90 95       	com	r25
 234:	9b 01       	movw	r18, r22
 236:	ac 01       	movw	r20, r24
 238:	bd 01       	movw	r22, r26
 23a:	cf 01       	movw	r24, r30
 23c:	08 95       	ret

0000023e <_exit>:
 23e:	f8 94       	cli

00000240 <__stop_program>:
 240:	ff cf       	rjmp	.-2      	; 0x240 <__stop_program>
